{"version":3,"sources":["components/almond/almond.js","components/es6-promise/dist/es6-promise.js","components/sjcl/sjcl.js","client/lib/hawk.js","client/lib/errors.js","client/lib/request.js","client/lib/hkdf.js","client/lib/pbkdf2.js","client/lib/credentials.js","client/lib/hawkCredentials.js","client/lib/metricsContext.js","client/FxAccountClient.js"],"names":["this","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","load","alt","setTimeout","cfg","amd","jQuery","global","factory","ES6Promise","objectOrFunction","x","type","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useNextTick","process","nextTick","flush","useVertxTimer","vertxNext","useSetTimeout","useMutationObserver","iterations","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","useMessageChannel","channel","MessageChannel","port1","onmessage","port2","postMessage","globalSetTimeout","len","queue","arg","undefined","attemptVertx","r","vertx","runOnLoop","runOnContext","then","onFulfillment","onRejection","_arguments","parent","child","constructor","noop","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","object","Constructor","promise","resolve","selfFulfillment","TypeError","cannotReturnOwn","getThen","error","GET_THEN_ERROR","tryThen","then$$1","fulfillmentHandler","rejectionHandler","handleForeignThenable","thenable","sealed","fulfill","reason","reject","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","ErrorObject","tryCatch","TRY_CATCH_ERROR","hasCallback","succeeded","failed","initializePromise","resolver","nextId","Enumerator$1","input","_instanceConstructor","isArray","_remaining","Array","_enumerate","validationError","all$1","entries","race$1","_","reject$1","needsResolver","needsNew","Promise$2","polyfill$1","local","self","Function","P","Promise","promiseToString","toString","cast","_isArray","scheduleFlush","browserWindow","window","browserGlobal","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","Math","random","_eachEntry","entry","c","resolve$$1","_then","_settledAt","_willSettleAt","state","enumerator","all","race","_setScheduler","_setAsap","_asap","catch","polyfill","v","a","b","sjcl","exception","invalid","d","g","h","k","l","m","s","q","t","u","w","cipher","hash","keyexchange","mode","misc","codec","corrupt","message","bug","notReady","aes","encrypt","decrypt","bitArray","bitSlice","clamp","extract","floor","getPartial","bitLength","ceil","partial","round","equal","push","pop","utf8String","fromBits","String","fromCharCode","decodeURIComponent","escape","toBits","unescape","encodeURIComponent","charCodeAt","hex","substr","replace","parseInt","base64","base64url","sha256","reset","update","finalize","blockSize","pow","hmac","mac","digest","pbkdf2","hawk","client","header","method","options","result","field","artifacts","err","timestamp","utils","now","localtimeOffsetMsec","credentials","key","algorithm","baseIndexOf","crypto","algorithms","parseUri","ts","nonce","randomString","resource","relative","host","hostname","port","ext","app","dlg","calculatePayloadHash","payload","contentType","calculateMac","hasExt","escapeHeaderAttribute","authenticate","request","getResponseHeader","attrsAuth","parseAuthorizationHeader","tsm","calculateTsMac","setNtpOffset","Date","getTime","required","attributes","modArtifacts","calculatedHash","authenticateTimestamp","updateClock","headerVersion","normalized","generateNormalizedString","toUpperCase","toLowerCase","parseContentType","storage","_cache","setItem","getItem","setStorage","ntpOffset","getNtpOffset","offset","console","attribute","keys","headerParts","match","scheme","attributesString","verify","$0","$1","$2","size","randomSource","array","fromIndex","uriRegex","uriByNumber","exec","protocol","INVALID_TIMESTAMP","INCORRECT_EMAIL_CASE","ERRORS","Request","baseUri","xhr","_localtimeOffsetMsec","XMLHttpRequest","timeout","send","path","jsonPayload","JSON","stringify","open","errno","onreadystatechange","readyState","responseText","parse","retrying","serverTime","status","code","hawkHeader","setRequestHeader","headers","hkdf","ikm","info","salt","prk","hashLength","num_blocks","prev","output","truncated","derive","kw","NAMESPACE","kwe","email","PBKDF2_ROUNDS","STRETCHED_PASS_LENGTH_BYTES","HKDF_SALT","HKDF_LENGTH","setup","emailInput","passwordInput","password","emailUTF8","passwordUTF8","quickStretchedPW","authPW","unwrapBKey","xor","bitArray1","bitArray2","unbundleKeyFetchResponse","bundle","bitBundle","deriveBundleKeys","ciphertext","expectedHmac","hmacKey","keyAWrapB","xorKey","kA","wrapKB","keyInfo","bitKeyInfo","keyMaterial","deriveHawkCredentials","tokenHex","context","token","PREFIX_NAME","out","authKey","bundleKey","marshall","deviceId","flowId","flowBeginTime","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","hawkCredentials","metricsContext","isUndefined","val","isNull","isEmptyObject","isEmptyString","FxAccountClient","uriVersionRegExp","test","VERSION","checkCreds","creds","oldUnwrapBKey","keyFetchToken","passwordChangeToken","RegExp","HKDF_SIZE","signUp","endpoint","requestOpts","service","redirectTo","preVerified","resume","lang","Accept-Language","accountData","signIn","unblockCode","originalLoginEmail","verificationMethod","skipCaseError","verifyCode","uid","reminder","marketingOptIn","verifyTokenCode","sessionToken","recoveryEmailStatus","recoveryEmailResendCode","passwordForgotSendCode","passwordForgotResendCode","passwordForgotToken","passwordForgotVerifyCode","passwordForgotStatus","accountReset","newPassword","accountResetToken","queryParams","accountKeys","kB","accountDestroy","response","accountStatus","accountStatusByEmail","sessionDestroy","customSessionToken","sessionStatus","certificateSign","publicKey","duration","queryString","passwordChange","oldPassword","_passwordChangeStart","oldCreds","emailToHashWith","_passwordChangeKeys","_passwordChangeFinish","oldAuthPW","passwordData","defers","results","newCreds","hawkCreds","sessionData","newWrapKb","sessionTokenId","wrapKb","getRandomBytes","deviceRegister","deviceName","deviceType","deviceCallback","pushCallback","devicePublicKey","deviceAuthKey","pushPublicKey","pushAuthKey","deviceUpdate","deviceDestroy","deviceList","sessions","sendUnblockCode","rejectUnblockCode","sendSms","phoneNumber","messageId","features","smsStatus","url","country","consumeSigninCode","recoveryEmails","recoveryEmailCreate","recoveryEmailDestroy","recoveryEmailSetPrimaryEmail","_required"],"mappings":"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":"fxa-client.min.js","sourcesContent":["/**\n * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split(\"/\"));\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        config = cfg;\n        if (config.deps) {\n            req(config.deps, config.callback);\n        }\n        return req;\n    };\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"components/almond/almond\", function(){});\n\n","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   4.1.0+f046478d\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define('es6-promise',factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\nvar _isArray = undefined;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = undefined;\nvar customSchedulerFn = undefined;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && ({}).toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var r = require;\n    var vertx = r('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = undefined;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var _arguments = arguments;\n\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n  if (_state) {\n    (function () {\n      var callback = _arguments[_state - 1];\n      asap(function () {\n        return invokeCallback(_state, child, callback, parent._result);\n      });\n    })();\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(16);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar GET_THEN_ERROR = new ErrorObject();\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    GET_THEN_ERROR.error = error;\n    return GET_THEN_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === GET_THEN_ERROR) {\n      reject(promise, GET_THEN_ERROR.error);\n      GET_THEN_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = undefined,\n      callback = undefined,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction ErrorObject() {\n  this.error = null;\n}\n\nvar TRY_CATCH_ERROR = new ErrorObject();\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = undefined,\n      error = undefined,\n      succeeded = undefined,\n      failed = undefined;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n      resolve(promise, value);\n    } else if (failed) {\n      reject(promise, error);\n    } else if (settled === FULFILLED) {\n      fulfill(promise, value);\n    } else if (settled === REJECTED) {\n      reject(promise, value);\n    }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction Enumerator$1(Constructor, input) {\n  this._instanceConstructor = Constructor;\n  this.promise = new Constructor(noop);\n\n  if (!this.promise[PROMISE_ID]) {\n    makePromise(this.promise);\n  }\n\n  if (isArray(input)) {\n    this.length = input.length;\n    this._remaining = input.length;\n\n    this._result = new Array(this.length);\n\n    if (this.length === 0) {\n      fulfill(this.promise, this._result);\n    } else {\n      this.length = this.length || 0;\n      this._enumerate(input);\n      if (this._remaining === 0) {\n        fulfill(this.promise, this._result);\n      }\n    }\n  } else {\n    reject(this.promise, validationError());\n  }\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nEnumerator$1.prototype._enumerate = function (input) {\n  for (var i = 0; this._state === PENDING && i < input.length; i++) {\n    this._eachEntry(input[i], i);\n  }\n};\n\nEnumerator$1.prototype._eachEntry = function (entry, i) {\n  var c = this._instanceConstructor;\n  var resolve$$1 = c.resolve;\n\n  if (resolve$$1 === resolve$1) {\n    var _then = getThen(entry);\n\n    if (_then === then && entry._state !== PENDING) {\n      this._settledAt(entry._state, i, entry._result);\n    } else if (typeof _then !== 'function') {\n      this._remaining--;\n      this._result[i] = entry;\n    } else if (c === Promise$2) {\n      var promise = new c(noop);\n      handleMaybeThenable(promise, entry, _then);\n      this._willSettleAt(promise, i);\n    } else {\n      this._willSettleAt(new c(function (resolve$$1) {\n        return resolve$$1(entry);\n      }), i);\n    }\n  } else {\n    this._willSettleAt(resolve$$1(entry), i);\n  }\n};\n\nEnumerator$1.prototype._settledAt = function (state, i, value) {\n  var promise = this.promise;\n\n  if (promise._state === PENDING) {\n    this._remaining--;\n\n    if (state === REJECTED) {\n      reject(promise, value);\n    } else {\n      this._result[i] = value;\n    }\n  }\n\n  if (this._remaining === 0) {\n    fulfill(promise, this._result);\n  }\n};\n\nEnumerator$1.prototype._willSettleAt = function (promise, i) {\n  var enumerator = this;\n\n  subscribe(promise, undefined, function (value) {\n    return enumerator._settledAt(FULFILLED, i, value);\n  }, function (reason) {\n    return enumerator._settledAt(REJECTED, i, reason);\n  });\n};\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all$1(entries) {\n  return new Enumerator$1(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race$1(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {function} resolver\n  Useful for tooling.\n  @constructor\n*/\nfunction Promise$2(resolver) {\n  this[PROMISE_ID] = nextId();\n  this._result = this._state = undefined;\n  this._subscribers = [];\n\n  if (noop !== resolver) {\n    typeof resolver !== 'function' && needsResolver();\n    this instanceof Promise$2 ? initializePromise(this, resolver) : needsNew();\n  }\n}\n\nPromise$2.all = all$1;\nPromise$2.race = race$1;\nPromise$2.resolve = resolve$1;\nPromise$2.reject = reject$1;\nPromise$2._setScheduler = setScheduler;\nPromise$2._setAsap = setAsap;\nPromise$2._asap = asap;\n\nPromise$2.prototype = {\n  constructor: Promise$2,\n\n  /**\n    The primary way of interacting with a promise is through its `then` method,\n    which registers callbacks to receive either a promise's eventual value or the\n    reason why the promise cannot be fulfilled.\n  \n    ```js\n    findUser().then(function(user){\n      // user is available\n    }, function(reason){\n      // user is unavailable, and you are given the reason why\n    });\n    ```\n  \n    Chaining\n    --------\n  \n    The return value of `then` is itself a promise.  This second, 'downstream'\n    promise is resolved with the return value of the first promise's fulfillment\n    or rejection handler, or rejected if the handler throws an exception.\n  \n    ```js\n    findUser().then(function (user) {\n      return user.name;\n    }, function (reason) {\n      return 'default name';\n    }).then(function (userName) {\n      // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n      // will be `'default name'`\n    });\n  \n    findUser().then(function (user) {\n      throw new Error('Found user, but still unhappy');\n    }, function (reason) {\n      throw new Error('`findUser` rejected and we're unhappy');\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n      // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n    });\n    ```\n    If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n  \n    ```js\n    findUser().then(function (user) {\n      throw new PedagogicalException('Upstream error');\n    }).then(function (value) {\n      // never reached\n    }).then(function (value) {\n      // never reached\n    }, function (reason) {\n      // The `PedgagocialException` is propagated all the way down to here\n    });\n    ```\n  \n    Assimilation\n    ------------\n  \n    Sometimes the value you want to propagate to a downstream promise can only be\n    retrieved asynchronously. This can be achieved by returning a promise in the\n    fulfillment or rejection handler. The downstream promise will then be pending\n    until the returned promise is settled. This is called *assimilation*.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // The user's comments are now available\n    });\n    ```\n  \n    If the assimliated promise rejects, then the downstream promise will also reject.\n  \n    ```js\n    findUser().then(function (user) {\n      return findCommentsByAuthor(user);\n    }).then(function (comments) {\n      // If `findCommentsByAuthor` fulfills, we'll have the value here\n    }, function (reason) {\n      // If `findCommentsByAuthor` rejects, we'll have the reason here\n    });\n    ```\n  \n    Simple Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let result;\n  \n    try {\n      result = findResult();\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n    findResult(function(result, err){\n      if (err) {\n        // failure\n      } else {\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findResult().then(function(result){\n      // success\n    }, function(reason){\n      // failure\n    });\n    ```\n  \n    Advanced Example\n    --------------\n  \n    Synchronous Example\n  \n    ```javascript\n    let author, books;\n  \n    try {\n      author = findAuthor();\n      books  = findBooksByAuthor(author);\n      // success\n    } catch(reason) {\n      // failure\n    }\n    ```\n  \n    Errback Example\n  \n    ```js\n  \n    function foundBooks(books) {\n  \n    }\n  \n    function failure(reason) {\n  \n    }\n  \n    findAuthor(function(author, err){\n      if (err) {\n        failure(err);\n        // failure\n      } else {\n        try {\n          findBoooksByAuthor(author, function(books, err) {\n            if (err) {\n              failure(err);\n            } else {\n              try {\n                foundBooks(books);\n              } catch(reason) {\n                failure(reason);\n              }\n            }\n          });\n        } catch(error) {\n          failure(err);\n        }\n        // success\n      }\n    });\n    ```\n  \n    Promise Example;\n  \n    ```javascript\n    findAuthor().\n      then(findBooksByAuthor).\n      then(function(books){\n        // found books\n    }).catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method then\n    @param {Function} onFulfilled\n    @param {Function} onRejected\n    Useful for tooling.\n    @return {Promise}\n  */\n  then: then,\n\n  /**\n    `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n    as the catch block of a try/catch statement.\n  \n    ```js\n    function findAuthor(){\n      throw new Error('couldn't find that author');\n    }\n  \n    // synchronous\n    try {\n      findAuthor();\n    } catch(reason) {\n      // something went wrong\n    }\n  \n    // async with promises\n    findAuthor().catch(function(reason){\n      // something went wrong\n    });\n    ```\n  \n    @method catch\n    @param {Function} onRejection\n    Useful for tooling.\n    @return {Promise}\n  */\n  'catch': function _catch(onRejection) {\n    return this.then(null, onRejection);\n  }\n};\n\n/*global self*/\nfunction polyfill$1() {\n    var local = undefined;\n\n    if (typeof global !== 'undefined') {\n        local = global;\n    } else if (typeof self !== 'undefined') {\n        local = self;\n    } else {\n        try {\n            local = Function('return this')();\n        } catch (e) {\n            throw new Error('polyfill failed because global object is unavailable in this environment');\n        }\n    }\n\n    var P = local.Promise;\n\n    if (P) {\n        var promiseToString = null;\n        try {\n            promiseToString = Object.prototype.toString.call(P.resolve());\n        } catch (e) {\n            // silently ignored\n        }\n\n        if (promiseToString === '[object Promise]' && !P.cast) {\n            return;\n        }\n    }\n\n    local.Promise = Promise$2;\n}\n\n// Strange compat..\nPromise$2.polyfill = polyfill$1;\nPromise$2.Promise = Promise$2;\n\nreturn Promise$2;\n\n})));\n\n//# sourceMappingURL=es6-promise.map\n;\n","define('sjcl',[], function () {\"use strict\";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return\"CORRUPT: \"+this.message};this.message=a},invalid:function(a){this.toString=function(){return\"INVALID: \"+this.message};this.message=a},bug:function(a){this.toString=function(){return\"BUG: \"+this.message};this.message=a},notReady:function(a){this.toString=function(){return\"NOT READY: \"+this.message};this.message=a}}};\n\"undefined\"!==typeof module&&module.exports&&(module.exports=sjcl);\nsjcl.cipher.aes=function(a){this.b[0][0][0]||this.g();var b,c,d,e,g=this.b[0][4],f=this.b[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid(\"invalid aes key size\");this.e=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=g[c>>>24]<<24^g[c>>16&255]<<16^g[c>>8&255]<<8^g[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:f[0][g[c>>>24]]^f[1][g[c>>16&255]]^f[2][g[c>>8&255]]^f[3][g[c&\n255]]};\nsjcl.cipher.aes.prototype={encrypt:function(a){return v(this,a,0)},decrypt:function(a){return v(this,a,1)},b:[[[],[],[],[],[]],[[],[],[],[],[]]],g:function(){var a=this.b[0],b=this.b[1],c=a[4],d=b[4],e,g,f,h=[],p=[],k,n,l,m;for(e=0;0x100>e;e++)p[(h[e]=e<<1^283*(e>>7))^e]=e;for(g=f=0;!c[g];g^=k||1,f=p[f]||1){l=f^f<<1^f<<2^f<<3^f<<4;l=l>>8^l&255^99;c[g]=l;d[l]=g;n=h[e=h[k=h[g]]];m=0x1010101*n^0x10001*e^0x101*k^0x1010100*g;n=0x101*h[l]^0x1010100*l;for(e=0;4>e;e++)a[e][g]=n=n<<24^n>>>8,b[e][l]=m=m<<24^m>>>8}for(e=\n0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};\nfunction v(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid(\"invalid aes block size\");var d=a.e[c],e=b[0]^d[0],g=b[c?3:1]^d[1],f=b[2]^d[2];b=b[c?1:3]^d[3];var h,p,k,n=d.length/4-2,l,m=4,s=[0,0,0,0];h=a.b[c];a=h[0];var q=h[1],r=h[2],t=h[3],u=h[4];for(l=0;l<n;l++)h=a[e>>>24]^q[g>>16&255]^r[f>>8&255]^t[b&255]^d[m],p=a[g>>>24]^q[f>>16&255]^r[b>>8&255]^t[e&255]^d[m+1],k=a[f>>>24]^q[b>>16&255]^r[e>>8&255]^t[g&255]^d[m+2],b=a[b>>>24]^q[e>>16&255]^r[g>>8&255]^t[f&255]^d[m+3],m+=4,e=h,g=p,f=k;for(l=\n0;4>l;l++)s[c?3&-l:l]=u[e>>>24]<<24^u[g>>16&255]<<16^u[f>>8&255]<<8^u[b&255]^d[m++],h=e,e=g,g=f,f=b,b=h;return s}\nsjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.l(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.l(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===\nb?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b&=31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===\nc},l:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},n:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]}};\nsjcl.codec.utf8String={fromBits:function(a){var b=\"\",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>24),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};\nsjcl.codec.hex={fromBits:function(a){var b=\"\",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\\s|0x/g,\"\");d=a.length;a+=\"00000000\";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};\nsjcl.codec.base64={i:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",fromBits:function(a,b,c){var d=\"\",e=0,g=sjcl.codec.base64.i,f=0,h=sjcl.bitArray.bitLength(a);c&&(g=g.substr(0,62)+\"-_\");for(c=0;6*d.length<h;)d+=g.charAt((f^a[c]>>>e)>>>26),6>e?(f=a[c]<<6-e,e+=26,c++):(f<<=6,e-=6);for(;d.length&3&&!b;)d+=\"=\";return d},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\");var c=[],d,e=0,g=sjcl.codec.base64.i,f=0,h;b&&(g=g.substr(0,62)+\"-_\");for(d=0;d<a.length;d++){h=g.indexOf(a.charAt(d));\nif(0>h)throw new sjcl.exception.invalid(\"this isn't base64!\");26<e?(e-=26,c.push(f^h>>>e),f=h<<32-e):(e+=6,f^=h<<32-e)}e&56&&c.push(sjcl.bitArray.partial(e&56,f,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.e[0]||this.g();a?(this.f=a.f.slice(0),this.d=a.d.slice(0),this.a=a.a):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};\nsjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.f=this.k.slice(0);this.d=[];this.a=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.d=sjcl.bitArray.concat(this.d,a);b=this.a;a=this.a=b+sjcl.bitArray.bitLength(a);for(b=512+b&-512;b<=a;b+=512)w(this,c.splice(0,16));return this},finalize:function(){var a,b=this.d,c=this.f,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.a/\n4294967296));for(b.push(this.a|0);b.length;)w(this,b.splice(0,16));this.reset();return c},k:[],e:[],g:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}var b=0,c=2,d;a:for(;64>b;c++){for(d=2;d*d<=c;d++)if(0===c%d)continue a;8>b&&(this.k[b]=a(Math.pow(c,0.5)));this.e[b]=a(Math.pow(c,1/3));b++}}};\nfunction w(a,b){var c,d,e,g=b.slice(0),f=a.f,h=a.e,p=f[0],k=f[1],n=f[2],l=f[3],m=f[4],s=f[5],q=f[6],r=f[7];for(c=0;64>c;c++)16>c?d=g[c]:(d=g[c+1&15],e=g[c+14&15],d=g[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+g[c&15]+g[c+9&15]|0),d=d+r+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(q^m&(s^q))+h[c],r=q,q=s,s=m,m=l+d|0,l=n,n=k,k=p,p=d+(k&n^l&(k^n))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;f[0]=f[0]+p|0;f[1]=f[1]+k|0;f[2]=f[2]+n|0;f[3]=f[3]+l|0;f[4]=f[4]+m|0;f[5]=f[5]+s|0;f[6]=\nf[6]+q|0;f[7]=f[7]+r|0}sjcl.misc.hmac=function(a,b){this.j=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.c=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.c[0].update(c[0]);this.c[1].update(c[1]);this.h=new b(this.c[0])};sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.m)throw new sjcl.exception.invalid(\"encrypt on already updated hmac called!\");this.update(a);return this.digest(a)};\nsjcl.misc.hmac.prototype.reset=function(){this.h=new this.j(this.c[0]);this.m=!1};sjcl.misc.hmac.prototype.update=function(a){this.m=!0;this.h.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.h.finalize(),a=(new this.j(this.c[1])).update(a).finalize();this.reset();return a};\nsjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1E3;if(0>d||0>c)throw sjcl.exception.invalid(\"invalid params to pbkdf2\");\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var g,f,h,p,k=[],n=sjcl.bitArray;for(p=1;32*k.length<(d||1);p++){e=g=a.encrypt(n.concat(b,[p]));for(f=1;f<c;f++){g=a.encrypt(g);for(h=0;h<g.length;h++)e[h]^=g[h]}k=k.concat(e)}d&&(k=n.clamp(k,d));return k};\n  return sjcl; });\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawk',['sjcl'], function (sjcl) {\n  'use strict';\n\n  /*\n   HTTP Hawk Authentication Scheme\n   Copyright (c) 2012-2013, Eran Hammer <eran@hueniverse.com>\n   MIT Licensed\n   */\n\n\n  // Declare namespace\n\n  var hawk = {};\n\n  hawk.client = {\n\n    // Generate an Authorization header for a given request\n\n    /*\n     uri: 'http://example.com/resource?a=b'\n     method: HTTP verb (e.g. 'GET', 'POST')\n     options: {\n\n     // Required\n\n     credentials: {\n     id: 'dh37fgj492je',\n     key: 'aoijedoaijsdlaksjdl',\n     algorithm: 'sha256'                                 // 'sha1', 'sha256'\n     },\n\n     // Optional\n\n     ext: 'application-specific',                        // Application specific data sent via the ext attribute\n     timestamp: Date.now() / 1000,                       // A pre-calculated timestamp in seconds\n     nonce: '2334f34f',                                  // A pre-generated nonce\n     localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n     payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n     contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n     hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n     app: '24s23423f34dx',                               // Oz application id\n     dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n     }\n     */\n\n    header: function (uri, method, options) {\n      /*eslint complexity: [2, 21] */\n      var result = {\n        field: '',\n        artifacts: {}\n      };\n\n      // Validate inputs\n\n      if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\n        !method || typeof method !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        result.err = 'Invalid argument type';\n        return result;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        result.err = 'Invalid credential object';\n        return result;\n      }\n\n      if (hawk.utils.baseIndexOf(hawk.crypto.algorithms, credentials.algorithm) === -1) {\n        result.err = 'Unknown algorithm';\n        return result;\n      }\n\n      // Parse URI\n\n      if (typeof uri === 'string') {\n        uri = hawk.utils.parseUri(uri);\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        method: method,\n        resource: uri.relative,\n        host: uri.hostname,\n        port: uri.port,\n        hash: options.hash,\n        ext: options.ext,\n        app: options.app,\n        dlg: options.dlg\n      };\n\n      result.artifacts = artifacts;\n\n      // Calculate payload hash\n\n      if (!artifacts.hash &&\n        options.hasOwnProperty('payload')) {\n\n        artifacts.hash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n      }\n\n      var mac = hawk.crypto.calculateMac('header', credentials, artifacts);\n\n      // Construct header\n\n      var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n      var header = 'Hawk id=\"' + credentials.id +\n        '\", ts=\"' + artifacts.ts +\n        '\", nonce=\"' + artifacts.nonce +\n        (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n        (hasExt ? '\", ext=\"' + hawk.utils.escapeHeaderAttribute(artifacts.ext) : '') +\n        '\", mac=\"' + mac + '\"';\n\n      if (artifacts.app) {\n        header += ', app=\"' + artifacts.app +\n          (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n      }\n\n      result.field = header;\n\n      return result;\n    },\n\n\n    // Validate server response\n\n    /*\n     request:    object created via 'new XMLHttpRequest()' after response received\n     artifacts:  object recieved from header().artifacts\n     options: {\n     payload:    optional payload received\n     required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n     }\n     */\n\n    authenticate: function (request, credentials, artifacts, options) {\n\n      options = options || {};\n\n      if (request.getResponseHeader('www-authenticate')) {\n\n        // Parse HTTP WWW-Authenticate header\n\n        var attrsAuth = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('www-authenticate'), ['ts', 'tsm', 'error']);\n        if (!attrsAuth) {\n          return false;\n        }\n\n        if (attrsAuth.ts) {\n          var tsm = hawk.crypto.calculateTsMac(attrsAuth.ts, credentials);\n          if (tsm !== attrsAuth.tsm) {\n            return false;\n          }\n\n          hawk.utils.setNtpOffset(attrsAuth.ts - Math.floor((new Date()).getTime() / 1000));     // Keep offset at 1 second precision\n        }\n      }\n\n      // Parse HTTP Server-Authorization header\n\n      if (!request.getResponseHeader('server-authorization') &&\n        !options.required) {\n\n        return true;\n      }\n\n      var attributes = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('server-authorization'), ['mac', 'ext', 'hash']);\n      if (!attributes) {\n        return false;\n      }\n\n      var modArtifacts = {\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        method: artifacts.method,\n        resource: artifacts.resource,\n        host: artifacts.host,\n        port: artifacts.port,\n        hash: attributes.hash,\n        ext: attributes.ext,\n        app: artifacts.app,\n        dlg: artifacts.dlg\n      };\n\n      var mac = hawk.crypto.calculateMac('response', credentials, modArtifacts);\n      if (mac !== attributes.mac) {\n        return false;\n      }\n\n      if (!options.hasOwnProperty('payload')) {\n        return true;\n      }\n\n      if (!attributes.hash) {\n        return false;\n      }\n\n      var calculatedHash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.getResponseHeader('content-type'));\n      return (calculatedHash === attributes.hash);\n    },\n\n    message: function (host, port, message, options) {\n\n      // Validate inputs\n\n      if (!host || typeof host !== 'string' ||\n        !port || typeof port !== 'number' ||\n        message === null || message === undefined || typeof message !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        return null;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        // Invalid credential object\n        return null;\n      }\n\n      if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return null;\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        host: host,\n        port: port,\n        hash: hawk.crypto.calculatePayloadHash(message, credentials.algorithm)\n      };\n\n      // Construct authorization\n\n      var result = {\n        id: credentials.id,\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        hash: artifacts.hash,\n        mac: hawk.crypto.calculateMac('message', credentials, artifacts)\n      };\n\n      return result;\n    },\n\n    authenticateTimestamp: function (message, credentials, updateClock) {           // updateClock defaults to true\n\n      var tsm = hawk.crypto.calculateTsMac(message.ts, credentials);\n      if (tsm !== message.tsm) {\n        return false;\n      }\n\n      if (updateClock !== false) {\n        hawk.utils.setNtpOffset(message.ts - Math.floor((new Date()).getTime() / 1000));    // Keep offset at 1 second precision\n      }\n\n      return true;\n    }\n  };\n\n\n  hawk.crypto = {\n\n    headerVersion: '1',\n\n    algorithms: ['sha1', 'sha256'],\n\n    calculateMac: function (type, credentials, options) {\n      var normalized = hawk.crypto.generateNormalizedString(type, options);\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update(normalized);\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    },\n\n    generateNormalizedString: function (type, options) {\n\n      var normalized = 'hawk.' + hawk.crypto.headerVersion + '.' + type + '\\n' +\n        options.ts + '\\n' +\n        options.nonce + '\\n' +\n        (options.method || '').toUpperCase() + '\\n' +\n        (options.resource || '') + '\\n' +\n        options.host.toLowerCase() + '\\n' +\n        options.port + '\\n' +\n        (options.hash || '') + '\\n';\n\n      if (options.ext) {\n        normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\n      }\n\n      normalized += '\\n';\n\n      if (options.app) {\n        normalized += options.app + '\\n' +\n          (options.dlg || '') + '\\n';\n      }\n\n      return normalized;\n    },\n\n    calculatePayloadHash: function (payload, algorithm, contentType) {\n      var hash = new sjcl.hash.sha256();\n      hash.update('hawk.' + hawk.crypto.headerVersion + '.payload\\n')\n        .update(hawk.utils.parseContentType(contentType) + '\\n')\n        .update(payload || '')\n        .update('\\n');\n\n      return sjcl.codec.base64.fromBits(hash.finalize());\n    },\n\n    calculateTsMac: function (ts, credentials) {\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update('hawk.' + hawk.crypto.headerVersion + '.ts\\n' + ts + '\\n');\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    }\n  };\n\n\n  hawk.utils = {\n\n    storage: {                                      // localStorage compatible interface\n      _cache: {},\n      setItem: function (key, value) {\n\n        hawk.utils.storage._cache[key] = value;\n      },\n      getItem: function (key) {\n\n        return hawk.utils.storage._cache[key];\n      }\n    },\n\n    setStorage: function (storage) {\n\n      var ntpOffset = hawk.utils.getNtpOffset() || 0;\n      hawk.utils.storage = storage;\n      hawk.utils.setNtpOffset(ntpOffset);\n    },\n\n    setNtpOffset: function (offset) {\n\n      try {\n        hawk.utils.storage.setItem('hawk_ntp_offset', offset);\n      }\n      catch (err) {\n        console.error('[hawk] could not write to storage.');\n        console.error(err);\n      }\n    },\n\n    getNtpOffset: function () {\n\n      return parseInt(hawk.utils.storage.getItem('hawk_ntp_offset') || '0', 10);\n    },\n\n    now: function () {\n\n      return (new Date()).getTime() + hawk.utils.getNtpOffset();\n    },\n\n    escapeHeaderAttribute: function (attribute) {\n\n      return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');\n    },\n\n    parseContentType: function (header) {\n\n      if (!header) {\n        return '';\n      }\n\n      return header.split(';')[0].replace(/^\\s+|\\s+$/g, '').toLowerCase();\n    },\n\n    parseAuthorizationHeader: function (header, keys) {\n\n      if (!header) {\n        return null;\n      }\n\n      var headerParts = header.match(/^(\\w+)(?:\\s+(.*))?$/);       // Header: scheme[ something]\n      if (!headerParts) {\n        return null;\n      }\n\n      var scheme = headerParts[1];\n      if (scheme.toLowerCase() !== 'hawk') {\n        return null;\n      }\n\n      var attributesString = headerParts[2];\n      if (!attributesString) {\n        return null;\n      }\n\n      var attributes = {};\n      var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\n\n        // Check valid attribute names\n\n        if (keys.indexOf($1) === -1) {\n          return;\n        }\n\n        // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\n\n        if ($2.match(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/) === null) {\n          return;\n        }\n\n        // Check for duplicates\n\n        if (attributes.hasOwnProperty($1)) {\n          return;\n        }\n\n        attributes[$1] = $2;\n        return '';\n      });\n\n      if (verify !== '') {\n        return null;\n      }\n\n      return attributes;\n    },\n\n    randomString: function (size) {\n\n      var randomSource = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n      var len = randomSource.length;\n\n      var result = [];\n      for (var i = 0; i < size; ++i) {\n        result[i] = randomSource[Math.floor(Math.random() * len)];\n      }\n\n      return result.join('');\n    },\n\n    baseIndexOf: function(array, value, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n      while (++index < length) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    },\n\n    parseUri: function (input) {\n\n      // Based on: parseURI 1.2.2\n      // http://blog.stevenlevithan.com/archives/parseuri\n      // (c) Steven Levithan <stevenlevithan.com>\n      // MIT License\n\n      var keys = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'hostname', 'port', 'resource', 'relative', 'pathname', 'directory', 'file', 'query', 'fragment'];\n\n      var uriRegex = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?)(?:#(.*))?)/;\n      var uriByNumber = uriRegex.exec(input);\n      var uri = {};\n\n      var i = 15;\n      while (i--) {\n        uri[keys[i]] = uriByNumber[i] || '';\n      }\n\n      if (uri.port === null ||\n        uri.port === '') {\n\n        uri.port = (uri.protocol.toLowerCase() === 'http' ? '80' : (uri.protocol.toLowerCase() === 'https' ? '443' : ''));\n      }\n\n      return uri;\n    }\n  };\n\n\n  return hawk;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/errors',[], function () {\n  return {\n    INVALID_TIMESTAMP: 111,\n    INCORRECT_EMAIL_CASE: 120\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/request',['./hawk', './errors'], function (hawk, ERRORS) {\n  'use strict';\n  /* global XMLHttpRequest */\n\n  /**\n   * @class Request\n   * @constructor\n   * @param {String} baseUri Base URI\n   * @param {Object} xhr XMLHttpRequest constructor\n   * @param {Object} [options={}] Options\n   *   @param {Number} [options.localtimeOffsetMsec]\n   *   Local time offset with the remote auth server's clock\n   */\n  function Request (baseUri, xhr, options) {\n    if (!options) {\n      options = {};\n    }\n    this.baseUri = baseUri;\n    this._localtimeOffsetMsec = options.localtimeOffsetMsec;\n    this.xhr = xhr || XMLHttpRequest;\n    this.timeout = options.timeout || 30 * 1000;\n  }\n\n  /**\n   * @method send\n   * @param {String} path Request path\n   * @param {String} method HTTP Method\n   * @param {Object} credentials HAWK Headers\n   * @param {Object} jsonPayload JSON Payload\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.retrying]\n   *   Flag indicating if the request is a retry\n   *   @param {Array} [options.headers]\n   *   A set of extra headers to add to the request\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  Request.prototype.send = function request(path, method, credentials, jsonPayload, options) {\n    /*eslint complexity: [2, 8] */\n    var xhr = new this.xhr();\n    var uri = this.baseUri + path;\n    var payload = null;\n    var self = this;\n    options = options || {};\n\n    if (jsonPayload) {\n      payload = JSON.stringify(jsonPayload);\n    }\n\n    try {\n      xhr.open(method, uri);\n    } catch (e) {\n      return Promise.reject({ error: 'Unknown error', message: e.toString(), errno: 999 });\n    }\n\n    return new Promise(function (resolve, reject) {\n      xhr.timeout = self.timeout;\n\n      xhr.onreadystatechange = function() {\n        if (xhr.readyState === 4) {\n          var result = xhr.responseText;\n          try {\n            result = JSON.parse(xhr.responseText);\n          } catch (e) { }\n\n          if (result.errno) {\n            // Try to recover from a timeskew error and not already tried\n            if (result.errno === ERRORS.INVALID_TIMESTAMP && !options.retrying) {\n              var serverTime = result.serverTime;\n              self._localtimeOffsetMsec = (serverTime * 1000) - new Date().getTime();\n\n              // add to options that the request is retrying\n              options.retrying = true;\n\n              return self.send(path, method, credentials, jsonPayload, options)\n                .then(resolve, reject);\n\n            } else {\n              return reject(result);\n            }\n          }\n\n          if (typeof xhr.status === 'undefined' || xhr.status !== 200) {\n            if (result.length === 0) {\n              return reject({ error: 'Timeout error', errno: 999 });\n            } else {\n              return reject({ error: 'Unknown error', message: result, errno: 999, code: xhr.status });\n            }\n          }\n\n          resolve(result);\n        }\n      };\n\n      // calculate Hawk header if credentials are supplied\n      if (credentials) {\n        var hawkHeader = hawk.client.header(uri, method, {\n                            credentials: credentials,\n                            payload: payload,\n                            contentType: 'application/json',\n                            localtimeOffsetMsec: self._localtimeOffsetMsec || 0\n                          });\n        xhr.setRequestHeader('authorization', hawkHeader.field);\n      }\n\n      xhr.setRequestHeader('Content-Type', 'application/json');\n\n      if (options && options.headers) {\n        // set extra headers for this request\n        for (var header in options.headers) {\n          xhr.setRequestHeader(header, options.headers[header]);\n        }\n      }\n\n      xhr.send(payload);\n    });\n  };\n\n  return Request;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hkdf',['sjcl'], function (sjcl) {\n  'use strict';\n\n  /**\n   * hkdf - The HMAC-based Key Derivation Function\n   * based on https://github.com/mozilla/node-hkdf\n   *\n   * @class hkdf\n   * @param {bitArray} ikm Initial keying material\n   * @param {bitArray} info Key derivation data\n   * @param {bitArray} salt Salt\n   * @param {integer} length Length of the derived key in bytes\n   * @return promise object- It will resolve with `output` data\n   */\n  function hkdf(ikm, info, salt, length) {\n\n    var mac = new sjcl.misc.hmac(salt, sjcl.hash.sha256);\n    mac.update(ikm);\n\n    // compute the PRK\n    var prk = mac.digest();\n\n    // hash length is 32 because only sjcl.hash.sha256 is used at this moment\n    var hashLength = 32;\n    var num_blocks = Math.ceil(length / hashLength);\n    var prev = sjcl.codec.hex.toBits('');\n    var output = '';\n\n    for (var i = 0; i < num_blocks; i++) {\n      var hmac = new sjcl.misc.hmac(prk, sjcl.hash.sha256);\n\n      var input = sjcl.bitArray.concat(\n        sjcl.bitArray.concat(prev, info),\n        sjcl.codec.utf8String.toBits((String.fromCharCode(i + 1)))\n      );\n\n      hmac.update(input);\n\n      prev = hmac.digest();\n      output += sjcl.codec.hex.fromBits(prev);\n    }\n\n    var truncated = sjcl.bitArray.clamp(sjcl.codec.hex.toBits(output), length * 8);\n\n    return Promise.resolve(truncated);\n  }\n\n  return hkdf;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/pbkdf2',['sjcl'], function (sjcl, P) {\n  'use strict';\n\n  /**\n   * @class pbkdf2\n   * @constructor\n   */\n  var pbkdf2 = {\n    /**\n     * @method derive\n     * @param  {bitArray} input The password hex buffer.\n     * @param  {bitArray} salt The salt string buffer.\n     * @return {int} iterations the derived key bit array.\n     */\n    derive: function(input, salt, iterations, len) {\n      var result = sjcl.misc.pbkdf2(input, salt, iterations, len, sjcl.misc.hmac);\n      return Promise.resolve(result);\n    }\n  };\n\n  return pbkdf2;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/credentials',['./request', 'sjcl', './hkdf', './pbkdf2'], function (Request, sjcl, hkdf, pbkdf2) {\n  'use strict';\n\n  // Key wrapping and stretching configuration.\n  var NAMESPACE = 'identity.mozilla.com/picl/v1/';\n  var PBKDF2_ROUNDS = 1000;\n  var STRETCHED_PASS_LENGTH_BYTES = 32 * 8;\n\n  var HKDF_SALT = sjcl.codec.hex.toBits('00');\n  var HKDF_LENGTH = 32;\n\n  /**\n   * Key Wrapping with a name\n   *\n   * @method kw\n   * @static\n   * @param {String} name The name of the salt\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kw(name) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name);\n  }\n\n  /**\n   * Key Wrapping with a name and an email\n   *\n   * @method kwe\n   * @static\n   * @param {String} name The name of the salt\n   * @param {String} email The email of the user.\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kwe(name, email) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name + ':' + email);\n  }\n\n  /**\n   * @class credentials\n   * @constructor\n   */\n  return {\n    /**\n     * Setup credentials\n     *\n     * @method setup\n     * @param {String} emailInput\n     * @param {String} passwordInput\n     * @return {Promise} A promise that will be fulfilled with `result` of generated credentials\n     */\n    setup: function (emailInput, passwordInput) {\n      var result = {};\n      var email = kwe('quickStretch', emailInput);\n      var password = sjcl.codec.utf8String.toBits(passwordInput);\n\n      result.emailUTF8 = emailInput;\n      result.passwordUTF8 = passwordInput;\n\n      return pbkdf2.derive(password, email, PBKDF2_ROUNDS, STRETCHED_PASS_LENGTH_BYTES)\n        .then(\n        function (quickStretchedPW) {\n          result.quickStretchedPW = quickStretchedPW;\n\n          return hkdf(quickStretchedPW, kw('authPW'), HKDF_SALT, HKDF_LENGTH)\n            .then(\n            function (authPW) {\n              result.authPW = authPW;\n\n              return hkdf(quickStretchedPW, kw('unwrapBkey'), HKDF_SALT, HKDF_LENGTH);\n            }\n          );\n        }\n      )\n        .then(\n        function (unwrapBKey) {\n          result.unwrapBKey = unwrapBKey;\n          return result;\n        }\n      );\n    },\n    /**\n     * Wrap\n     *\n     * @method wrap\n     * @param {bitArray} bitArray1\n     * @param {bitArray} bitArray2\n     * @return {bitArray} wrap result of the two bitArrays\n     */\n    xor: function (bitArray1, bitArray2) {\n      var result = [];\n\n      for (var i = 0; i < bitArray1.length; i++) {\n        result[i] = bitArray1[i] ^ bitArray2[i];\n      }\n\n      return result;\n    },\n    /**\n     * Unbundle the WrapKB\n     * @param {String} key Bundle Key in hex\n     * @param {String} bundle Key bundle in hex\n     * @returns {*}\n     */\n    unbundleKeyFetchResponse: function (key, bundle) {\n      var self = this;\n      var bitBundle = sjcl.codec.hex.toBits(bundle);\n\n      return this.deriveBundleKeys(key, 'account/keys')\n        .then(\n          function (keys) {\n            var ciphertext = sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64);\n            var expectedHmac = sjcl.bitArray.bitSlice(bitBundle, 8 * -32);\n            var hmac = new sjcl.misc.hmac(keys.hmacKey, sjcl.hash.sha256);\n            hmac.update(ciphertext);\n\n            if (!sjcl.bitArray.equal(hmac.digest(), expectedHmac)) {\n              throw new Error('Bad HMac');\n            }\n\n            var keyAWrapB = self.xor(sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64), keys.xorKey);\n\n            return {\n              kA: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 0, 8 * 32)),\n              wrapKB: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 8 * 32))\n            };\n          }\n        );\n    },\n    /**\n     * Derive the HMAC and XOR keys required to encrypt a given size of payload.\n     * @param {String} key Hex Bundle Key\n     * @param {String} keyInfo Bundle Key Info\n     * @returns {Object} hmacKey, xorKey\n     */\n    deriveBundleKeys: function(key, keyInfo) {\n      var bitKeyInfo = kw(keyInfo);\n      var salt = sjcl.codec.hex.toBits('');\n      key = sjcl.codec.hex.toBits(key);\n\n      return hkdf(key, bitKeyInfo, salt, 3 * 32)\n        .then(\n          function (keyMaterial) {\n\n            return {\n              hmacKey: sjcl.bitArray.bitSlice(keyMaterial, 0, 8 * 32),\n              xorKey: sjcl.bitArray.bitSlice(keyMaterial, 8 * 32)\n            };\n          }\n        );\n    }\n  };\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawkCredentials',['sjcl', './hkdf'], function (sjcl, hkdf) {\n  'use strict';\n\n  var PREFIX_NAME = 'identity.mozilla.com/picl/v1/';\n  var bitSlice = sjcl.bitArray.bitSlice;\n  var salt = sjcl.codec.hex.toBits('');\n\n  /**\n   * @class hawkCredentials\n   * @method deriveHawkCredentials\n   * @param {String} tokenHex\n   * @param {String} context\n   * @param {int} size\n   * @returns {Promise}\n   */\n  function deriveHawkCredentials(tokenHex, context, size) {\n    var token = sjcl.codec.hex.toBits(tokenHex);\n    var info = sjcl.codec.utf8String.toBits(PREFIX_NAME + context);\n\n    return hkdf(token, info, salt, size || 3 * 32)\n      .then(function(out) {\n        var authKey = bitSlice(out, 8 * 32, 8 * 64);\n        var bundleKey = bitSlice(out, 8 * 64);\n\n        return {\n          algorithm: 'sha256',\n          id: sjcl.codec.hex.fromBits(bitSlice(out, 0, 8 * 32)),\n          key: authKey,\n          bundleKey: bundleKey\n        };\n      });\n  }\n\n  return deriveHawkCredentials;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// This module does the handling for the metrics context\n// activity event metadata.\n\ndefine('client/lib/metricsContext',[], function () {\n  'use strict';\n\n  return {\n    marshall: function (data) {\n      return {\n        deviceId: data.deviceId,\n        flowId: data.flowId,\n        flowBeginTime: data.flowBeginTime,\n        utmCampaign: data.utmCampaign,\n        utmContent: data.utmContent,\n        utmMedium: data.utmMedium,\n        utmSource: data.utmSource,\n        utmTerm: data.utmTerm\n      };\n    }\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/FxAccountClient',[\n  'es6-promise',\n  'sjcl',\n  './lib/credentials',\n  './lib/errors',\n  './lib/hawkCredentials',\n  './lib/metricsContext',\n  './lib/request',\n], function (ES6Promise, sjcl, credentials, ERRORS, hawkCredentials, metricsContext, Request) {\n  'use strict';\n\n  // polyfill ES6 promises on browsers that do not support them.\n  ES6Promise.polyfill();\n\n  var VERSION = 'v1';\n  var uriVersionRegExp = new RegExp('/' + VERSION + '$');\n  var HKDF_SIZE = 2 * 32;\n\n  function isUndefined(val) {\n    return typeof val === 'undefined';\n  }\n\n  function isNull(val) {\n    return val === null;\n  }\n\n  function isEmptyObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]' && ! Object.keys(val).length;\n  }\n\n  function isEmptyString(val) {\n    return val === '';\n  }\n\n  function required(val, name) {\n    if (isUndefined(val) ||\n        isNull(val) ||\n        isEmptyObject(val) ||\n        isEmptyString(val)) {\n      throw new Error('Missing ' + name);\n    }\n  }\n\n  /**\n   * @class FxAccountClient\n   * @constructor\n   * @param {String} uri Auth Server URI\n   * @param {Object} config Configuration\n   */\n  function FxAccountClient(uri, config) {\n    if (! uri && ! config) {\n      throw new Error('Firefox Accounts auth server endpoint or configuration object required.');\n    }\n\n    if (typeof uri !== 'string') {\n      config = uri || {};\n      uri = config.uri;\n    }\n\n    if (typeof config === 'undefined') {\n      config = {};\n    }\n\n    if (! uri) {\n      throw new Error('FxA auth server uri not set.');\n    }\n\n    if (!uriVersionRegExp.test(uri)) {\n      uri = uri + '/' + VERSION;\n    }\n\n    this.request = new Request(uri, config.xhr, { localtimeOffsetMsec: config.localtimeOffsetMsec });\n  }\n\n  FxAccountClient.VERSION = VERSION;\n\n  /**\n   * @method signUp\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.preVerified]\n   *   set email to be verified if possible\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signUp = function (email, password, options) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          /*eslint complexity: [2, 13] */\n          var endpoint = '/account/create';\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n          var requestOpts = {};\n\n          if (options) {\n            if (options.service) {\n              data.service = options.service;\n            }\n\n            if (options.redirectTo) {\n              data.redirectTo = options.redirectTo;\n            }\n\n            // preVerified is used for unit/functional testing\n            if (options.preVerified) {\n              data.preVerified = options.preVerified;\n            }\n\n            if (options.resume) {\n              data.resume = options.resume;\n            }\n\n            if (options.keys) {\n              endpoint += '?keys=true';\n            }\n\n            if (options.lang) {\n              requestOpts.headers = {\n                'Accept-Language': options.lang\n              };\n            }\n\n            if (options.metricsContext) {\n              data.metricsContext = metricsContext.marshall(options.metricsContext);\n            }\n          }\n\n          return self.request.send(endpoint, 'POST', null, data, requestOpts)\n            .then(\n              function(accountData) {\n                if (options && options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method signIn\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   *   @param {String} [options.service]\n   *   Service being signed into\n   *   @param {String} [options.reason]\n   *   Reason for sign in. Can be one of: `signin`, `password_check`,\n   *   `password_change`, `password_reset`\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   *   @param {String} [options.unblockCode]\n   *   Login unblock code.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signIn = function (email, password, options) {\n    var self = this;\n    options = options || {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          var endpoint = '/account/login';\n\n          if (options.keys) {\n            endpoint += '?keys=true';\n          }\n\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n\n          if (options.reason) {\n            data.reason = options.reason;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.unblockCode) {\n            data.unblockCode = options.unblockCode;\n          }\n\n          if (options.originalLoginEmail) {\n            data.originalLoginEmail = options.originalLoginEmail;\n          }\n\n          if (options.verificationMethod) {\n            data.verificationMethod = options.verificationMethod;\n          }\n\n          return self.request.send(endpoint, 'POST', null, data)\n            .then(\n              function(accountData) {\n                if (options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              },\n              function(error) {\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n                  options.originalLoginEmail = email;\n\n                  return self.signIn(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method verifyCode\n   * @param {String} uid Account ID\n   * @param {String} code Verification code\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Service being signed into\n   *   @param {String} [options.reminder]\n   *   Reminder that was used to verify the account\n   *   @param {String} [options.type]\n   *   Type of code being verified, only supports `secondary` otherwise will verify account/sign-in\n   *   @param {Boolean} [options.marketingOptIn]\n   *   If `true`, notifies marketing of opt-in intent.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.verifyCode = function(uid, code, options) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(uid, 'uid');\n        required(code, 'verify code');\n\n        var data = {\n          uid: uid,\n          code: code\n        };\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.reminder) {\n            data.reminder = options.reminder;\n          }\n\n          if (options.type) {\n            data.type = options.type;\n          }\n\n          if (options.marketingOptIn) {\n            data.marketingOptIn = true;\n          }\n        }\n\n        return self.request.send('/recovery_email/verify_code', 'POST', null, data);\n      });\n  };\n\n  FxAccountClient.prototype.verifyTokenCode = function(sessionToken, uid, code) {\n    var self = this;\n\n    required(uid, 'uid');\n    required(code, 'verify token code');\n    required(sessionToken, 'sessionToken');\n\n    return Promise.resolve()\n      .then(function () {\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function (creds) {\n        var data = {\n          uid: uid,\n          code: code\n        };\n\n        return self.request.send('/session/verify/token', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * @method recoveryEmailStatus\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailStatus = function(sessionToken) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/recovery_email/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   *\n   * @method recoveryEmailResendCode\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.email]\n   *   Code will be resent to this email, only used for secondary email codes\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.type]\n   *   Specifies the type of code to send, currently only supported type is\n   *   `upgradeSession`.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailResendCode = function(sessionToken, options) {\n    var self = this;\n    var data = {};\n    var requestOpts = {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        if (options) {\n          if (options.email) {\n            data.email = options.email;\n          }\n\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.type) {\n            data.type = options.type;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n        }\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/recovery_email/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Used to ask the server to send a recovery code.\n   * The API returns passwordForgotToken to the client.\n   *\n   * @method passwordForgotSendCode\n   * @param {String} email\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotSendCode = function(email, options) {\n    var self = this;\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return self.request.send('/password/forgot/send_code', 'POST', null, data, requestOpts);\n      });\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotResendCode\n   * @param {String} email\n   * @param {String} passwordForgotToken\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotResendCode = function(email, passwordForgotToken, options) {\n    var self = this;\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/password/forgot/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Submits the verification token to the server.\n   * The API returns accountResetToken to the client.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotVerifyCode\n   * @param {String} code\n   * @param {String} passwordForgotToken\n   * @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotVerifyCode = function(code, passwordForgotToken, options) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(code, 'reset code');\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          code: code\n        };\n\n        if (options && options.metricsContext) {\n          data.metricsContext = metricsContext.marshall(options.metricsContext);\n        }\n\n        return self.request.send('/password/forgot/verify_code', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Returns the status for the passwordForgotToken.\n   * If the request returns a success response, the token has not yet been consumed.\n\n   * @method passwordForgotStatus\n   * @param {String} passwordForgotToken\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotStatus = function(passwordForgotToken) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/password/forgot/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * The API returns reset result to the client.\n   * HAWK-authenticated with accountResetToken\n   *\n   * @method accountReset\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {String} accountResetToken\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, a new `keyFetchToken` is provisioned. `options.sessionToken`\n   *   is required if `options.keys` is true.\n   *   @param {Boolean} [options.sessionToken]\n   *   If `true`, a new `sessionToken` is provisioned.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountReset = function(email, newPassword, accountResetToken, options) {\n    var self = this;\n    var data = {};\n    var unwrapBKey;\n\n    options = options || {};\n\n    if (options.sessionToken) {\n      data.sessionToken = options.sessionToken;\n    }\n\n    if (options.metricsContext) {\n      data.metricsContext = metricsContext.marshall(options.metricsContext);\n    }\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(newPassword, 'new password');\n        required(accountResetToken, 'accountResetToken');\n\n        if (options.keys) {\n          required(options.sessionToken, 'sessionToken');\n        }\n\n        return credentials.setup(email, newPassword);\n      })\n      .then(\n        function (result) {\n          if (options.keys) {\n            unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n          }\n\n          data.authPW = sjcl.codec.hex.fromBits(result.authPW);\n\n          return hawkCredentials(accountResetToken, 'accountResetToken',  HKDF_SIZE);\n        }\n      ).then(\n        function (creds) {\n          var queryParams = '';\n          if (options.keys) {\n            queryParams = '?keys=true';\n          }\n\n          var endpoint = '/account/reset' + queryParams;\n          return self.request.send(endpoint, 'POST', creds, data)\n            .then(\n              function(accountData) {\n                if (options.keys && accountData.keyFetchToken) {\n                  accountData.unwrapBKey = unwrapBKey;\n                }\n\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Get the base16 bundle of encrypted kA|wrapKb.\n   *\n   * @method accountKeys\n   * @param {String} keyFetchToken\n   * @param {String} oldUnwrapBKey\n   * @return {Promise} A promise that will be fulfilled with JSON of {kA, kB}  of the key bundle\n   */\n  FxAccountClient.prototype.accountKeys = function(keyFetchToken, oldUnwrapBKey) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(keyFetchToken, 'keyFetchToken');\n        required(oldUnwrapBKey, 'oldUnwrapBKey');\n\n        return hawkCredentials(keyFetchToken, 'keyFetchToken',  3 * 32);\n      })\n      .then(function(creds) {\n        var bundleKey = sjcl.codec.hex.fromBits(creds.bundleKey);\n\n        return self.request.send('/account/keys', 'GET', creds)\n          .then(\n            function(payload) {\n\n              return credentials.unbundleKeyFetchResponse(bundleKey, payload.bundle);\n            });\n      })\n      .then(function(keys) {\n        return {\n          kB: sjcl.codec.hex.fromBits(\n            credentials.xor(\n              sjcl.codec.hex.toBits(keys.wrapKB),\n              sjcl.codec.hex.toBits(oldUnwrapBKey)\n            )\n          ),\n          kA: keys.kA\n        };\n      });\n  };\n\n  /**\n   * This deletes the account completely. All stored data is erased.\n   *\n   * @method accountDestroy\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountDestroy = function(email, password, options) {\n    var self = this;\n    options = options || {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          return self.request.send('/account/destroy', 'POST', null, data)\n            .then(\n              function(response) {\n                return response;\n              },\n              function(error) {\n                // if incorrect email case error\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n\n                  return self.accountDestroy(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Gets the status of an account by uid.\n   *\n   * @method accountStatus\n   * @param {String} uid User account id\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatus = function(uid) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(uid, 'uid');\n\n        return self.request.send('/account/status?uid=' + uid, 'GET');\n      });\n  };\n\n  /**\n   * Gets the status of an account by email.\n   *\n   * @method accountStatusByEmail\n   * @param {String} email User account email\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatusByEmail = function(email) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n\n        return self.request.send('/account/status', 'POST', null, {email: email});\n      });\n  };\n\n  /**\n   * Destroys this session, by invalidating the sessionToken.\n   *\n   * @method sessionDestroy\n   * @param {String} sessionToken User session token\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.customSessionToken] Override which session token to destroy for this same user\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionDestroy = function(sessionToken, options) {\n    var self = this;\n    var data = {};\n    options = options || {};\n\n    if (options.customSessionToken) {\n      data.customSessionToken = options.customSessionToken;\n    }\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/session/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Responds successfully if the session status is valid, requires the sessionToken.\n   *\n   * @method sessionStatus\n   * @param {String} sessionToken User session token\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionStatus = function(sessionToken) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/session/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Sign a BrowserID public key\n   *\n   * @method certificateSign\n   * @param {String} sessionToken User session token\n   * @param {Object} publicKey The key to sign\n   * @param {int} duration Time interval from now when the certificate will expire in milliseconds\n   * @param {Object} [options={}] Options\n   *   @param {String} [service=''] The requesting service, sent via the query string\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.certificateSign = function(sessionToken, publicKey, duration, options) {\n    var self = this;\n    var data = {\n      publicKey: publicKey,\n      duration: duration\n    };\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(publicKey, 'publicKey');\n        required(duration, 'duration');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        options = options || {};\n\n        var queryString = '';\n        if (options.service) {\n          queryString = '?service=' + encodeURIComponent(options.service);\n        }\n\n        return self.request.send('/certificate/sign' + queryString, 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Change the password from one known value to another.\n   *\n   * @method passwordChange\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {String} newPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get a new keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordChange = function(email, oldPassword, newPassword, options) {\n    var self = this;\n    options = options || {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(oldPassword, 'old password');\n        required(newPassword, 'new password');\n\n        return self._passwordChangeStart(email, oldPassword);\n      })\n      .then(function (credentials) {\n\n        var oldCreds = credentials;\n        var emailToHashWith = credentials.emailToHashWith || email;\n\n        return self._passwordChangeKeys(oldCreds)\n          .then(function (keys) {\n\n            return self._passwordChangeFinish(emailToHashWith, newPassword, oldCreds, keys, options);\n          });\n      });\n\n  };\n\n  /**\n   * First step to change the password.\n   *\n   * @method passwordChangeStart\n   * @private\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText` and `oldUnwrapBKey`\n   */\n  FxAccountClient.prototype._passwordChangeStart = function(email, oldPassword, options) {\n    var self = this;\n    options = options || {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(oldPassword, 'old password');\n\n        return credentials.setup(email, oldPassword);\n      })\n      .then(function (oldCreds) {\n        var data = {\n          email: oldCreds.emailUTF8,\n          oldAuthPW: sjcl.codec.hex.fromBits(oldCreds.authPW)\n        };\n\n        return self.request.send('/password/change/start', 'POST', null, data)\n          .then(\n            function(passwordData) {\n              passwordData.oldUnwrapBKey = sjcl.codec.hex.fromBits(oldCreds.unwrapBKey);\n\n              // Similar to password reset, this keeps the contract that we always\n              // hash passwords with the original account email.\n              passwordData.emailToHashWith = email;\n              return passwordData;\n            },\n            function(error) {\n              // if incorrect email case error\n              if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                options.skipCaseError = true;\n\n                return self._passwordChangeStart(error.email, oldPassword, options);\n              } else {\n                throw error;\n              }\n            }\n          );\n      });\n  };\n\n  function checkCreds(creds) {\n    required(creds, 'credentials');\n    required(creds.oldUnwrapBKey, 'credentials.oldUnwrapBKey');\n    required(creds.keyFetchToken, 'credentials.keyFetchToken');\n    required(creds.passwordChangeToken, 'credentials.passwordChangeToken');\n  }\n\n  /**\n   * Second step to change the password.\n   *\n   * @method _passwordChangeKeys\n   * @private\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeKeys = function(oldCreds) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        checkCreds(oldCreds);\n      })\n      .then(function () {\n        return self.accountKeys(oldCreds.keyFetchToken, oldCreds.oldUnwrapBKey);\n      });\n  };\n\n  /**\n   * Third step to change the password.\n   *\n   * @method _passwordChangeFinish\n   * @private\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @param {Object} keys This object should contain the unbundled keys\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeFinish = function(email, newPassword, oldCreds, keys, options) {\n    options = options || {};\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n        required(newPassword, 'new password');\n        checkCreds(oldCreds);\n        required(keys, 'keys');\n        required(keys.kB, 'keys.kB');\n\n        var defers = [];\n        defers.push(credentials.setup(email, newPassword));\n        defers.push(hawkCredentials(oldCreds.passwordChangeToken, 'passwordChangeToken',  HKDF_SIZE));\n\n        if (options.sessionToken) {\n          // Unbundle session data to get session id\n          defers.push(hawkCredentials(options.sessionToken, 'sessionToken',  HKDF_SIZE));\n        }\n\n        return Promise.all(defers);\n      })\n      .then(function (results) {\n        var newCreds = results[0];\n        var hawkCreds = results[1];\n        var sessionData = results[2];\n        var newWrapKb = sjcl.codec.hex.fromBits(\n          credentials.xor(\n            sjcl.codec.hex.toBits(keys.kB),\n            newCreds.unwrapBKey\n          )\n        );\n\n        var queryParams = '';\n        if (options.keys) {\n          queryParams = '?keys=true';\n        }\n\n        var sessionTokenId;\n        if (sessionData && sessionData.id) {\n          sessionTokenId = sessionData.id;\n        }\n\n        return self.request.send('/password/change/finish' + queryParams, 'POST', hawkCreds, {\n          wrapKb: newWrapKb,\n          authPW: sjcl.codec.hex.fromBits(newCreds.authPW),\n          sessionToken: sessionTokenId\n        })\n        .then(function (accountData) {\n          if (options.keys && accountData.keyFetchToken) {\n            accountData.unwrapBKey = sjcl.codec.hex.fromBits(newCreds.unwrapBKey);\n          }\n          return accountData;\n        });\n      });\n  };\n\n  /**\n   * Get 32 bytes of random data. This should be combined with locally-sourced entropy when creating salts, etc.\n   *\n   * @method getRandomBytes\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.getRandomBytes = function() {\n\n    return this.request.send('/get_random_bytes', 'POST');\n  };\n\n  /**\n   * Add a new device\n   *\n   * @method deviceRegister\n   * @param {String} sessionToken User session token\n   * @param {String} deviceName Name of device\n   * @param {String} deviceType Type of device (mobile|desktop)\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceRegister = function (sessionToken, deviceName, deviceType, options) {\n    var request = this.request;\n    options = options || {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceName, 'deviceName');\n        required(deviceType, 'deviceType');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          name: deviceName,\n          type: deviceType\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Update the name of an existing device\n   *\n   * @method deviceUpdate\n   * @param {String} sessionToken User session token\n   * @param {String} deviceId User-unique identifier of device\n   * @param {String} deviceName Name of device\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceUpdate = function (sessionToken, deviceId, deviceName, options) {\n    var request = this.request;\n    options = options || {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceId, 'deviceId');\n        required(deviceName, 'deviceName');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          id: deviceId,\n          name: deviceName\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Unregister an existing device\n   *\n   * @method deviceDestroy\n   * @param {String} sessionToken Session token obtained from signIn\n   * @param {String} deviceId User-unique identifier of device\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceDestroy = function (sessionToken, deviceId) {\n    var request = this.request;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceId, 'deviceId');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          id: deviceId\n        };\n\n        return request.send('/account/device/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Get a list of all devices for a user\n   *\n   * @method deviceList\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceList = function (sessionToken) {\n    var request = this.request;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/account/devices', 'GET', creds);\n      });\n  };\n\n  /**\n   * Get a list of user's sessions\n   *\n   * @method sessions\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessions = function (sessionToken) {\n    var request = this.request;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/account/sessions', 'GET', creds);\n      });\n  };\n\n  /**\n   * Send an unblock code\n   *\n   * @method sendUnblockCode\n   * @param {String} email email where to send the login authorization code\n   * @param {Object} [options={}] Options\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sendUnblockCode = function (email, options) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(email, 'email');\n\n        var data = {\n          email: email\n        };\n\n        if (options && options.metricsContext) {\n          data.metricsContext = metricsContext.marshall(options.metricsContext);\n        }\n\n        return self.request.send('/account/login/send_unblock_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * Reject a login unblock code. Code will be deleted from the server\n   * and will not be able to be used again.\n   *\n   * @method rejectLoginAuthorizationCode\n   * @param {String} uid Account ID\n   * @param {String} unblockCode unblock code\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.rejectUnblockCode = function (uid, unblockCode) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(uid, 'uid');\n        required(unblockCode, 'unblockCode');\n\n        var data = {\n          uid: uid,\n          unblockCode: unblockCode\n        };\n\n        return self.request.send('/account/login/reject_unblock_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * Send an sms.\n   *\n   * @method sendSms\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} phoneNumber Phone number sms will be sent to\n   * @param {String} messageId Corresponding message id that will be sent\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.lang] Language that sms will be sent in\n   *   @param {Array} [options.features] Array of features to be enabled for the request\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   */\n  FxAccountClient.prototype.sendSms = function (sessionToken, phoneNumber, messageId, options) {\n    var request = this.request;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(phoneNumber, 'phoneNumber');\n        required(messageId, 'messageId');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          phoneNumber: phoneNumber,\n          messageId: messageId\n        };\n        var requestOpts = {};\n\n        if (options) {\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.features) {\n            data.features = options.features;\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return request.send('/sms', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Get SMS status for the current user.\n   *\n   * @method smsStatus\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.country] country Country to force for testing.\n   */\n  FxAccountClient.prototype.smsStatus = function (sessionToken, options) {\n    var request = this.request;\n    options = options || {};\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function (creds) {\n        var url = '/sms/status';\n        if (options.country) {\n          url += '?country=' + encodeURIComponent(options.country);\n        }\n        return request.send(url, 'GET', creds);\n      });\n  };\n\n  /**\n   * Consume a signinCode.\n   *\n   * @method consumeSigninCode\n   * @param {String} code The signinCode entered by the user\n   * @param {String} flowId Identifier for the current event flow\n   * @param {Number} flowBeginTime Timestamp for the flow.begin event\n   * @param {String} [deviceId] Identifier for the current device\n   */\n  FxAccountClient.prototype.consumeSigninCode = function (code, flowId, flowBeginTime, deviceId) {\n    var self = this;\n\n    return Promise.resolve()\n      .then(function () {\n        required(code, 'code');\n        required(flowId, 'flowId');\n        required(flowBeginTime, 'flowBeginTime');\n\n        return self.request.send('/signinCodes/consume', 'POST', null, {\n          code: code,\n          metricsContext: {\n            deviceId: deviceId,\n            flowId: flowId,\n            flowBeginTime: flowBeginTime\n          }\n        });\n      });\n  };\n\n  /**\n   * Get the recovery emails associated with the signed in account.\n   *\n   * @method recoveryEmails\n   * @param {String} sessionToken SessionToken obtained from signIn\n   */\n  FxAccountClient.prototype.recoveryEmails = function (sessionToken) {\n    var request = this.request;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/recovery_emails', 'GET', creds);\n      });\n  };\n\n  /**\n   * Create a new recovery email for the signed in account.\n   *\n   * @method recoveryEmailCreate\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email new email to be added\n   */\n  FxAccountClient.prototype.recoveryEmailCreate = function (sessionToken, email) {\n    var request = this.request;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(sessionToken, 'email');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n\n        return request.send('/recovery_email', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Remove the recovery email for the signed in account.\n   *\n   * @method recoveryEmailDestroy\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email email to be removed\n   */\n  FxAccountClient.prototype.recoveryEmailDestroy = function (sessionToken, email) {\n    var request = this.request;\n\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(sessionToken, 'email');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n\n        return request.send('/recovery_email/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Changes user's primary email address.\n   *\n   * @method recoveryEmailSetPrimaryEmail\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email Email that will be the new primary email for user\n   */\n  FxAccountClient.prototype.recoveryEmailSetPrimaryEmail = function (sessionToken, email) {\n    var request = this.request;\n    return Promise.resolve()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n        return request.send('/recovery_email/set_primary', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Check for a required argument. Exposed for unit testing.\n   *\n   * @param {Value} val - value to check\n   * @param {String} name - name of value\n   * @throws {Error} if argument is falsey, or an empty object\n   */\n  FxAccountClient.prototype._required = required;\n\n  return FxAccountClient;\n});\n\n"]}
{"version":3,"sources":["components/almond/almond.js","components/sjcl/sjcl.js","components/p/p.js","client/lib/hawk.js","client/lib/errors.js","client/lib/request.js","client/lib/hkdf.js","client/lib/pbkdf2.js","client/lib/credentials.js","client/lib/hawkCredentials.js","client/lib/metricsContext.js","client/FxAccountClient.js"],"names":["this","requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","slice","length","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","req","apply","aps","arguments","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","args","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","load","alt","setTimeout","cfg","amd","jQuery","v","a","b","c","sjcl","exception","invalid","d","g","h","k","l","m","s","q","r","t","u","w","cipher","hash","keyexchange","mode","misc","codec","corrupt","toString","message","bug","notReady","aes","encrypt","decrypt","bitArray","bitSlice","clamp","extract","Math","floor","getPartial","bitLength","ceil","partial","round","equal","push","pop","utf8String","fromBits","String","fromCharCode","decodeURIComponent","escape","toBits","unescape","encodeURIComponent","charCodeAt","hex","substr","replace","parseInt","base64","base64url","sha256","reset","update","finalize","blockSize","pow","hmac","mac","digest","pbkdf2","factory","P","withStackThrowing","error","stack","getTrace","withStack","stacks","filterStackString","currentTrace","getFileNameAndLineNumber","stackLine","exec","fileName","lineNumber","Number","captureLine","lines","firstLine","pos","pFileName","ignoreFirstLines","goodLines","line","isNodeFrame","isInternalFrame","pStartingLine","pEndingLine","makeStackTraceLong","STACK_JUMP_SEPARATOR","TaskNode","next","ot","type","throwFirstError","pendingErrors","shift","flush","head","tail","nFreeTaskNodes","flushing","schedule","node","requestFlush","requestFlushForNodeJS","currentDomain","process","domain","active","hasSetImmediate","setImmediate","nextTick","makeRequestCallFromMutationObserver","toggle","document","createTextNode","observer","gMutationObserver","observe","characterData","data","makeRequestCallFromTimer","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setInterval","DoneEb","onerror","x","Promise","Resolve","Fulfill","_state","FULFILLED","_value","_domain","HandleSettled","Reject","reason","REJECTED","isNodeJS","_op","OP_END","handleError","Propagate","parent","ResolveWithPromise","ResolveWithObject","TypeError","OnSettled","OP_THEN","then","GetThen","TryResolver","resolverFor","resolver","resolve","reject","_pending","HandlePending","op","pending","_cb","OP_CALL","Then","OP_MULTIPLE","cb","_eb","_trace","HandleCallback","_disposed","enter","exit","promise","nodelike","y","trace","longStackSupport","defer","_allSettled_cb","inspect","_all_cb","all","input","nextIsAllSettled","len","Array","allSettled","spread","values","eb","promised","onFulfilled","thisAndArgs","denodeify","TryApply","that","MutationObserver","WebKitMutationObserver","requestErrorThrow","VOID","onRejected","done","fail","fin","finback","fb","self","timeout","ms","msg","timedout","timeoutId","delay","state","nodeify","nodeback","task","hawk","client","header","method","options","result","field","artifacts","err","timestamp","utils","now","localtimeOffsetMsec","credentials","key","algorithm","baseIndexOf","crypto","algorithms","parseUri","ts","nonce","randomString","resource","relative","host","hostname","port","ext","app","dlg","calculatePayloadHash","payload","contentType","calculateMac","hasExt","undefined","escapeHeaderAttribute","authenticate","request","getResponseHeader","attrsAuth","parseAuthorizationHeader","tsm","calculateTsMac","setNtpOffset","Date","getTime","required","attributes","modArtifacts","calculatedHash","authenticateTimestamp","updateClock","headerVersion","normalized","generateNormalizedString","toUpperCase","toLowerCase","parseContentType","storage","_cache","setItem","getItem","setStorage","ntpOffset","getNtpOffset","offset","console","attribute","keys","headerParts","match","scheme","attributesString","verify","$0","$1","$2","size","randomSource","random","array","fromIndex","uriRegex","uriByNumber","protocol","INVALID_TIMESTAMP","INCORRECT_EMAIL_CASE","ERRORS","Request","baseUri","xhr","_localtimeOffsetMsec","XMLHttpRequest","send","path","jsonPayload","deferred","JSON","stringify","open","errno","onreadystatechange","readyState","responseText","parse","retrying","serverTime","status","code","hawkHeader","setRequestHeader","headers","hkdf","ikm","info","salt","prk","hashLength","num_blocks","prev","output","truncated","derive","iterations","kw","NAMESPACE","kwe","email","PBKDF2_ROUNDS","STRETCHED_PASS_LENGTH_BYTES","HKDF_SALT","HKDF_LENGTH","setup","emailInput","passwordInput","password","emailUTF8","passwordUTF8","quickStretchedPW","authPW","unwrapBKey","xor","bitArray1","bitArray2","unbundleKeyFetchResponse","bundle","bitBundle","deriveBundleKeys","ciphertext","expectedHmac","hmacKey","keyAWrapB","xorKey","kA","wrapKB","keyInfo","bitKeyInfo","keyMaterial","deriveHawkCredentials","tokenHex","context","token","PREFIX_NAME","out","authKey","bundleKey","marshall","deviceId","flowId","flowBeginTime","utmCampaign","utmContent","utmMedium","utmSource","utmTerm","hawkCredentials","metricsContext","isUndefined","val","isNull","isEmptyObject","isEmptyString","FxAccountClient","uriVersionRegExp","test","VERSION","checkCreds","creds","oldUnwrapBKey","keyFetchToken","passwordChangeToken","RegExp","HKDF_SIZE","signUp","endpoint","requestOpts","service","redirectTo","preVerified","resume","lang","Accept-Language","accountData","signIn","unblockCode","originalLoginEmail","skipCaseError","verifyCode","uid","reminder","marketingOptIn","recoveryEmailStatus","sessionToken","recoveryEmailResendCode","passwordForgotSendCode","passwordForgotResendCode","passwordForgotToken","passwordForgotVerifyCode","passwordForgotStatus","accountReset","newPassword","accountResetToken","queryParams","accountKeys","kB","accountDestroy","response","accountStatus","accountStatusByEmail","sessionDestroy","customSessionToken","sessionStatus","certificateSign","publicKey","duration","queryString","passwordChange","oldPassword","_passwordChangeStart","oldCreds","emailToHashWith","_passwordChangeKeys","_passwordChangeFinish","oldAuthPW","passwordData","defers","newCreds","hawkCreds","sessionData","newWrapKb","sessionTokenId","wrapKb","getRandomBytes","deviceRegister","deviceName","deviceType","deviceCallback","pushCallback","devicePublicKey","deviceAuthKey","pushPublicKey","pushAuthKey","deviceUpdate","deviceDestroy","deviceList","sessions","sendUnblockCode","rejectUnblockCode","sendSms","phoneNumber","messageId","features","smsStatus","url","country","consumeSigninCode","recoveryEmails","recoveryEmailCreate","recoveryEmailDestroy","recoveryEmailSecondaryEmailEnabled","recoveryEmailSetPrimaryEmail","_required"],"mappings":"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AqO,MAAAA,EAEA,OAAA1F,GAAAwD,KAAA,8BAAA,OAAA8F,EAAAjS,MAWA4R,EAAA1b,UAAA6hB,UAAA3O,EAEAwI;;;;;;;;;;;;AX1ixZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA,ADsBA;ACrzBA,ADg0BA;AC/zfA,ADggBA;AC/ftvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA,AD0BA;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"fxa-client.min.js","sourcesContent":["/**\n * almond 0.2.5 Copyright (c) 2011-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that \"directory\" and not name of the baseName's\n                //module. For instance, baseName of \"one/two/three\", maps to\n                //\"one/two/three.js\", but we want the directory, \"one/two\" for\n                //this normalization.\n                baseParts = baseParts.slice(0, baseParts.length - 1);\n\n                name = baseParts.concat(name.split(\"/\"));\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            return req.apply(undef, aps.call(arguments, 0).concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (typeof callback === 'function') {\n\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback.apply(defined[name], args);\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        config = cfg;\n        if (config.deps) {\n            req(config.deps, config.callback);\n        }\n        return req;\n    };\n\n    define = function (name, deps, callback) {\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"components/almond/almond\", function(){});\n\n","define('sjcl',[], function () {\"use strict\";var sjcl={cipher:{},hash:{},keyexchange:{},mode:{},misc:{},codec:{},exception:{corrupt:function(a){this.toString=function(){return\"CORRUPT: \"+this.message};this.message=a},invalid:function(a){this.toString=function(){return\"INVALID: \"+this.message};this.message=a},bug:function(a){this.toString=function(){return\"BUG: \"+this.message};this.message=a},notReady:function(a){this.toString=function(){return\"NOT READY: \"+this.message};this.message=a}}};\n\"undefined\"!==typeof module&&module.exports&&(module.exports=sjcl);\nsjcl.cipher.aes=function(a){this.b[0][0][0]||this.g();var b,c,d,e,g=this.b[0][4],f=this.b[1];b=a.length;var h=1;if(4!==b&&6!==b&&8!==b)throw new sjcl.exception.invalid(\"invalid aes key size\");this.e=[d=a.slice(0),e=[]];for(a=b;a<4*b+28;a++){c=d[a-1];if(0===a%b||8===b&&4===a%b)c=g[c>>>24]<<24^g[c>>16&255]<<16^g[c>>8&255]<<8^g[c&255],0===a%b&&(c=c<<8^c>>>24^h<<24,h=h<<1^283*(h>>7));d[a]=d[a-b]^c}for(b=0;a;b++,a--)c=d[b&3?a:a-4],e[b]=4>=a||4>b?c:f[0][g[c>>>24]]^f[1][g[c>>16&255]]^f[2][g[c>>8&255]]^f[3][g[c&\n255]]};\nsjcl.cipher.aes.prototype={encrypt:function(a){return v(this,a,0)},decrypt:function(a){return v(this,a,1)},b:[[[],[],[],[],[]],[[],[],[],[],[]]],g:function(){var a=this.b[0],b=this.b[1],c=a[4],d=b[4],e,g,f,h=[],p=[],k,n,l,m;for(e=0;0x100>e;e++)p[(h[e]=e<<1^283*(e>>7))^e]=e;for(g=f=0;!c[g];g^=k||1,f=p[f]||1){l=f^f<<1^f<<2^f<<3^f<<4;l=l>>8^l&255^99;c[g]=l;d[l]=g;n=h[e=h[k=h[g]]];m=0x1010101*n^0x10001*e^0x101*k^0x1010100*g;n=0x101*h[l]^0x1010100*l;for(e=0;4>e;e++)a[e][g]=n=n<<24^n>>>8,b[e][l]=m=m<<24^m>>>8}for(e=\n0;5>e;e++)a[e]=a[e].slice(0),b[e]=b[e].slice(0)}};\nfunction v(a,b,c){if(4!==b.length)throw new sjcl.exception.invalid(\"invalid aes block size\");var d=a.e[c],e=b[0]^d[0],g=b[c?3:1]^d[1],f=b[2]^d[2];b=b[c?1:3]^d[3];var h,p,k,n=d.length/4-2,l,m=4,s=[0,0,0,0];h=a.b[c];a=h[0];var q=h[1],r=h[2],t=h[3],u=h[4];for(l=0;l<n;l++)h=a[e>>>24]^q[g>>16&255]^r[f>>8&255]^t[b&255]^d[m],p=a[g>>>24]^q[f>>16&255]^r[b>>8&255]^t[e&255]^d[m+1],k=a[f>>>24]^q[b>>16&255]^r[e>>8&255]^t[g&255]^d[m+2],b=a[b>>>24]^q[e>>16&255]^r[g>>8&255]^t[f&255]^d[m+3],m+=4,e=h,g=p,f=k;for(l=\n0;4>l;l++)s[c?3&-l:l]=u[e>>>24]<<24^u[g>>16&255]<<16^u[f>>8&255]<<8^u[b&255]^d[m++],h=e,e=g,g=f,f=b,b=h;return s}\nsjcl.bitArray={bitSlice:function(a,b,c){a=sjcl.bitArray.l(a.slice(b/32),32-(b&31)).slice(1);return void 0===c?a:sjcl.bitArray.clamp(a,c-b)},extract:function(a,b,c){var d=Math.floor(-b-c&31);return((b+c-1^b)&-32?a[b/32|0]<<32-d^a[b/32+1|0]>>>d:a[b/32|0]>>>d)&(1<<c)-1},concat:function(a,b){if(0===a.length||0===b.length)return a.concat(b);var c=a[a.length-1],d=sjcl.bitArray.getPartial(c);return 32===d?a.concat(b):sjcl.bitArray.l(b,d,c|0,a.slice(0,a.length-1))},bitLength:function(a){var b=a.length;return 0===\nb?0:32*(b-1)+sjcl.bitArray.getPartial(a[b-1])},clamp:function(a,b){if(32*a.length<b)return a;a=a.slice(0,Math.ceil(b/32));var c=a.length;b&=31;0<c&&b&&(a[c-1]=sjcl.bitArray.partial(b,a[c-1]&2147483648>>b-1,1));return a},partial:function(a,b,c){return 32===a?b:(c?b|0:b<<32-a)+0x10000000000*a},getPartial:function(a){return Math.round(a/0x10000000000)||32},equal:function(a,b){if(sjcl.bitArray.bitLength(a)!==sjcl.bitArray.bitLength(b))return!1;var c=0,d;for(d=0;d<a.length;d++)c|=a[d]^b[d];return 0===\nc},l:function(a,b,c,d){var e;e=0;for(void 0===d&&(d=[]);32<=b;b-=32)d.push(c),c=0;if(0===b)return d.concat(a);for(e=0;e<a.length;e++)d.push(c|a[e]>>>b),c=a[e]<<32-b;e=a.length?a[a.length-1]:0;a=sjcl.bitArray.getPartial(e);d.push(sjcl.bitArray.partial(b+a&31,32<b+a?c:d.pop(),1));return d},n:function(a,b){return[a[0]^b[0],a[1]^b[1],a[2]^b[2],a[3]^b[3]]}};\nsjcl.codec.utf8String={fromBits:function(a){var b=\"\",c=sjcl.bitArray.bitLength(a),d,e;for(d=0;d<c/8;d++)0===(d&3)&&(e=a[d/4]),b+=String.fromCharCode(e>>>24),e<<=8;return decodeURIComponent(escape(b))},toBits:function(a){a=unescape(encodeURIComponent(a));var b=[],c,d=0;for(c=0;c<a.length;c++)d=d<<8|a.charCodeAt(c),3===(c&3)&&(b.push(d),d=0);c&3&&b.push(sjcl.bitArray.partial(8*(c&3),d));return b}};\nsjcl.codec.hex={fromBits:function(a){var b=\"\",c;for(c=0;c<a.length;c++)b+=((a[c]|0)+0xf00000000000).toString(16).substr(4);return b.substr(0,sjcl.bitArray.bitLength(a)/4)},toBits:function(a){var b,c=[],d;a=a.replace(/\\s|0x/g,\"\");d=a.length;a+=\"00000000\";for(b=0;b<a.length;b+=8)c.push(parseInt(a.substr(b,8),16)^0);return sjcl.bitArray.clamp(c,4*d)}};\nsjcl.codec.base64={i:\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",fromBits:function(a,b,c){var d=\"\",e=0,g=sjcl.codec.base64.i,f=0,h=sjcl.bitArray.bitLength(a);c&&(g=g.substr(0,62)+\"-_\");for(c=0;6*d.length<h;)d+=g.charAt((f^a[c]>>>e)>>>26),6>e?(f=a[c]<<6-e,e+=26,c++):(f<<=6,e-=6);for(;d.length&3&&!b;)d+=\"=\";return d},toBits:function(a,b){a=a.replace(/\\s|=/g,\"\");var c=[],d,e=0,g=sjcl.codec.base64.i,f=0,h;b&&(g=g.substr(0,62)+\"-_\");for(d=0;d<a.length;d++){h=g.indexOf(a.charAt(d));\nif(0>h)throw new sjcl.exception.invalid(\"this isn't base64!\");26<e?(e-=26,c.push(f^h>>>e),f=h<<32-e):(e+=6,f^=h<<32-e)}e&56&&c.push(sjcl.bitArray.partial(e&56,f,1));return c}};sjcl.codec.base64url={fromBits:function(a){return sjcl.codec.base64.fromBits(a,1,1)},toBits:function(a){return sjcl.codec.base64.toBits(a,1)}};sjcl.hash.sha256=function(a){this.e[0]||this.g();a?(this.f=a.f.slice(0),this.d=a.d.slice(0),this.a=a.a):this.reset()};sjcl.hash.sha256.hash=function(a){return(new sjcl.hash.sha256).update(a).finalize()};\nsjcl.hash.sha256.prototype={blockSize:512,reset:function(){this.f=this.k.slice(0);this.d=[];this.a=0;return this},update:function(a){\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));var b,c=this.d=sjcl.bitArray.concat(this.d,a);b=this.a;a=this.a=b+sjcl.bitArray.bitLength(a);for(b=512+b&-512;b<=a;b+=512)w(this,c.splice(0,16));return this},finalize:function(){var a,b=this.d,c=this.f,b=sjcl.bitArray.concat(b,[sjcl.bitArray.partial(1,1)]);for(a=b.length+2;a&15;a++)b.push(0);b.push(Math.floor(this.a/\n4294967296));for(b.push(this.a|0);b.length;)w(this,b.splice(0,16));this.reset();return c},k:[],e:[],g:function(){function a(a){return 0x100000000*(a-Math.floor(a))|0}var b=0,c=2,d;a:for(;64>b;c++){for(d=2;d*d<=c;d++)if(0===c%d)continue a;8>b&&(this.k[b]=a(Math.pow(c,0.5)));this.e[b]=a(Math.pow(c,1/3));b++}}};\nfunction w(a,b){var c,d,e,g=b.slice(0),f=a.f,h=a.e,p=f[0],k=f[1],n=f[2],l=f[3],m=f[4],s=f[5],q=f[6],r=f[7];for(c=0;64>c;c++)16>c?d=g[c]:(d=g[c+1&15],e=g[c+14&15],d=g[c&15]=(d>>>7^d>>>18^d>>>3^d<<25^d<<14)+(e>>>17^e>>>19^e>>>10^e<<15^e<<13)+g[c&15]+g[c+9&15]|0),d=d+r+(m>>>6^m>>>11^m>>>25^m<<26^m<<21^m<<7)+(q^m&(s^q))+h[c],r=q,q=s,s=m,m=l+d|0,l=n,n=k,k=p,p=d+(k&n^l&(k^n))+(k>>>2^k>>>13^k>>>22^k<<30^k<<19^k<<10)|0;f[0]=f[0]+p|0;f[1]=f[1]+k|0;f[2]=f[2]+n|0;f[3]=f[3]+l|0;f[4]=f[4]+m|0;f[5]=f[5]+s|0;f[6]=\nf[6]+q|0;f[7]=f[7]+r|0}sjcl.misc.hmac=function(a,b){this.j=b=b||sjcl.hash.sha256;var c=[[],[]],d,e=b.prototype.blockSize/32;this.c=[new b,new b];a.length>e&&(a=b.hash(a));for(d=0;d<e;d++)c[0][d]=a[d]^909522486,c[1][d]=a[d]^1549556828;this.c[0].update(c[0]);this.c[1].update(c[1]);this.h=new b(this.c[0])};sjcl.misc.hmac.prototype.encrypt=sjcl.misc.hmac.prototype.mac=function(a){if(this.m)throw new sjcl.exception.invalid(\"encrypt on already updated hmac called!\");this.update(a);return this.digest(a)};\nsjcl.misc.hmac.prototype.reset=function(){this.h=new this.j(this.c[0]);this.m=!1};sjcl.misc.hmac.prototype.update=function(a){this.m=!0;this.h.update(a)};sjcl.misc.hmac.prototype.digest=function(){var a=this.h.finalize(),a=(new this.j(this.c[1])).update(a).finalize();this.reset();return a};\nsjcl.misc.pbkdf2=function(a,b,c,d,e){c=c||1E3;if(0>d||0>c)throw sjcl.exception.invalid(\"invalid params to pbkdf2\");\"string\"===typeof a&&(a=sjcl.codec.utf8String.toBits(a));\"string\"===typeof b&&(b=sjcl.codec.utf8String.toBits(b));e=e||sjcl.misc.hmac;a=new e(a);var g,f,h,p,k=[],n=sjcl.bitArray;for(p=1;32*k.length<(d||1);p++){e=g=a.encrypt(n.concat(b,[p]));for(f=1;f<c;f++){g=a.encrypt(g);for(h=0;h<g.length;h++)e[h]^=g[h]}k=k.concat(e)}d&&(k=n.clamp(k,d));return k};\n  return sjcl; });\n","/*!\r\n * Copyright 2013 Robert Katić\r\n * Released under the MIT license\r\n * https://github.com/rkatic/p/blob/master/LICENSE\r\n *\r\n * High-priority-tasks code-portion based on https://github.com/kriskowal/asap\r\n * Long-Stack-Support code-portion based on https://github.com/kriskowal/q\r\n */\r\n;(function( factory ){\r\n\t// CommonJS\r\n\tif ( typeof module !== \"undefined\" && module && module.exports ) {\r\n\t\tmodule.exports = factory();\r\n\r\n\t// RequireJS\r\n\t} else if ( typeof define === \"function\" && define.amd ) {\r\n\t\tdefine( 'p',factory );\r\n\r\n\t// global\r\n\t} else {\r\n\t\tP = factory();\r\n\t}\r\n})(function() {\r\n\t\"use strict\";\r\n\r\n\tvar withStack = withStackThrowing,\r\n\t\tpStartingLine = captureLine(),\r\n\t\tpFileName,\r\n\t\tcurrentTrace = null;\r\n\r\n\tfunction withStackThrowing( error ) {\r\n\t\tif ( !error.stack ) {\r\n\t\t\ttry {\r\n\t\t\t\tthrow error;\r\n\t\t\t} catch ( e ) {}\r\n\t\t}\r\n\t\treturn error;\r\n\t}\r\n\r\n\tif ( new Error().stack ) {\r\n\t\twithStack = function( error ) {\r\n\t\t\treturn error;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction getTrace() {\r\n\t\tvar stack = withStack( new Error() ).stack;\r\n\t\tif ( !stack ) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tvar stacks = [ filterStackString( stack, 1 ) ];\r\n\r\n\t\tif ( currentTrace ) {\r\n\t\t\tstacks = stacks.concat( currentTrace );\r\n\r\n\t\t\tif ( stacks.length === 128 ) {\r\n\t\t\t\tstacks.pop();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn stacks;\r\n\t}\r\n\r\n\tfunction getFileNameAndLineNumber( stackLine ) {\r\n\t\tvar m =\r\n\t\t\t/at .+ \\((.+):(\\d+):(?:\\d+)\\)$/.exec( stackLine ) ||\r\n\t\t\t/at ([^ ]+):(\\d+):(?:\\d+)$/.exec( stackLine ) ||\r\n\t\t\t/@(.+):(\\d+):(?:\\d+)$/.exec( stackLine );\r\n\r\n\t\treturn m ? { fileName: m[1], lineNumber: Number(m[2]) } : null;\r\n\t}\r\n\r\n\tfunction captureLine() {\r\n\t\tvar stack = withStack( new Error() ).stack;\r\n\t\tif ( !stack ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tvar lines = stack.split(\"\\n\");\r\n\t\tvar firstLine = lines[0].indexOf(\"@\") > 0 ? lines[1] : lines[2];\r\n\t\tvar pos = getFileNameAndLineNumber( firstLine );\r\n\t\tif ( !pos ) {\r\n\t\t\treturn 0;\r\n\t\t}\r\n\r\n\t\tpFileName = pos.fileName;\r\n\t\treturn pos.lineNumber;\r\n\t}\r\n\r\n\tfunction filterStackString( stack, ignoreFirstLines ) {\r\n\t\tvar lines = stack.split(\"\\n\");\r\n\t\tvar goodLines = [];\r\n\r\n\t\tfor ( var i = ignoreFirstLines|0, l = lines.length; i < l; ++i ) {\r\n\t\t\tvar line = lines[i];\r\n\r\n\t\t\tif ( line && !isNodeFrame(line) && !isInternalFrame(line) ) {\r\n\t\t\t\tgoodLines.push( line );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn goodLines.join(\"\\n\");\r\n\t}\r\n\r\n\tfunction isNodeFrame( stackLine ) {\r\n\t\treturn stackLine.indexOf(\"(module.js:\") !== -1 ||\r\n\t\t\t   stackLine.indexOf(\"(node.js:\") !== -1;\r\n\t}\r\n\r\n\tfunction isInternalFrame( stackLine ) {\r\n\t\tvar pos = getFileNameAndLineNumber( stackLine );\r\n\t\treturn !!pos &&\r\n\t\t\tpos.fileName === pFileName &&\r\n\t\t\tpos.lineNumber >= pStartingLine &&\r\n\t\t\tpos.lineNumber <= pEndingLine;\r\n\t}\r\n\r\n\tvar STACK_JUMP_SEPARATOR = \"\\nFrom previous event:\\n\";\r\n\r\n\tfunction makeStackTraceLong( error ) {\r\n\t\tif ( error instanceof Error ) {\r\n\t\t\tvar stack = error.stack;\r\n\r\n\t\t\tif ( !stack ) {\r\n\t\t\t\tstack = withStack( error ).stack;\r\n\r\n\t\t\t} else if ( ~stack.indexOf(STACK_JUMP_SEPARATOR) ) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif ( stack ) {\r\n\t\t\t\terror.stack = [ filterStackString( stack, 0 ) ]\r\n\t\t\t\t\t.concat( currentTrace || [] )\r\n\t\t\t\t\t.join(STACK_JUMP_SEPARATOR);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t//__________________________________________________________________________\r\n\r\n\tvar\r\n\t\tisNodeJS = ot(typeof process) && process != null &&\r\n\t\t\t({}).toString.call(process) === \"[object process]\",\r\n\r\n\t\thasSetImmediate = typeof setImmediate === \"function\",\r\n\r\n\t\tgMutationObserver =\r\n\t\t\tot(typeof MutationObserver) && MutationObserver ||\r\n\t\t\tot(typeof WebKitMutationObserver) && WebKitMutationObserver,\r\n\r\n\t\thead = new TaskNode(),\r\n\t\ttail = head,\r\n\t\tflushing = false,\r\n\t\tnFreeTaskNodes = 0,\r\n\r\n\t\trequestFlush =\r\n\t\t\tisNodeJS ? requestFlushForNodeJS :\r\n\t\t\tgMutationObserver ? makeRequestCallFromMutationObserver( flush ) :\r\n\t\t\tmakeRequestCallFromTimer( flush ),\r\n\r\n\t\tpendingErrors = [],\r\n\t\trequestErrorThrow = makeRequestCallFromTimer( throwFirstError ),\r\n\r\n\t\thandleError,\r\n\r\n\t\tdomain,\r\n\r\n\t\tcall = ot.call,\r\n\t\tapply = ot.apply;\r\n\r\n\ttail.next = head;\r\n\r\n\tfunction TaskNode() {\r\n\t\tthis.f = null;\r\n\t\tthis.a = null;\r\n\t\tthis.b = null;\r\n\t\tthis.next = null;\r\n\t}\r\n\r\n\tfunction ot( type ) {\r\n\t\treturn type === \"object\" || type === \"function\";\r\n\t}\r\n\r\n\tfunction throwFirstError() {\r\n\t\tif ( pendingErrors.length ) {\r\n\t\t\tthrow pendingErrors.shift();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction flush() {\r\n\t\twhile ( head !== tail ) {\r\n\t\t\tvar h = head = head.next;\r\n\r\n\t\t\tif ( nFreeTaskNodes >= 1024 ) {\r\n\t\t\t\ttail.next = tail.next.next;\r\n\t\t\t} else {\r\n\t\t\t\t++nFreeTaskNodes;\r\n\t\t\t}\r\n\r\n\t\t\tvar f = h.f;\r\n\t\t\tvar a = h.a;\r\n\t\t\tvar b = h.b;\r\n\t\t\th.f = null;\r\n\t\t\th.a = null;\r\n\t\t\th.b = null;\r\n\r\n\t\t\tf( a, b );\r\n\t\t}\r\n\r\n\t\tflushing = false;\r\n\t\tcurrentTrace = null;\r\n\t}\r\n\r\n\tfunction schedule( f, a, b ) {\r\n\t\tvar node = tail.next;\r\n\r\n\t\tif ( node === head ) {\r\n\t\t\ttail.next = node = new TaskNode();\r\n\t\t\tnode.next = head;\r\n\t\t} else {\r\n\t\t\t--nFreeTaskNodes;\r\n\t\t}\r\n\r\n\t\ttail = node;\r\n\r\n\t\tnode.f = f;\r\n\t\tnode.a = a;\r\n\t\tnode.b = b;\r\n\r\n\t\tif ( !flushing ) {\r\n\t\t\tflushing = true;\r\n\t\t\trequestFlush();\r\n\t\t}\r\n\t}\r\n\r\n\tfunction requestFlushForNodeJS() {\r\n\t\tvar currentDomain = process.domain;\r\n\r\n\t\tif ( currentDomain ) {\r\n\t\t\tif ( !domain ) domain = (1,require)(\"domain\");\r\n\t\t\tdomain.active = process.domain = null;\r\n\t\t}\r\n\r\n\t\tif ( flushing && hasSetImmediate ) {\r\n\t\t\tsetImmediate( flush );\r\n\r\n\t\t} else {\r\n\t\t\tprocess.nextTick( flush );\r\n\t\t}\r\n\r\n\t\tif ( currentDomain ) {\r\n\t\t\tdomain.active = process.domain = currentDomain;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeRequestCallFromMutationObserver( callback ) {\r\n\t\tvar toggle = 1;\r\n\t\tvar node = document.createTextNode(\"\");\r\n\t\tvar observer = new gMutationObserver( callback );\r\n\t\tobserver.observe( node, {characterData: true} );\r\n\r\n\t\treturn function() {\r\n\t\t\ttoggle = -toggle;\r\n\t\t\tnode.data = toggle;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction makeRequestCallFromTimer( callback ) {\r\n\t\treturn function() {\r\n\t\t\tvar timeoutHandle = setTimeout( handleTimer, 0 );\r\n\t\t\tvar intervalHandle = setInterval( handleTimer, 50 );\r\n\r\n\t\t\tfunction handleTimer() {\r\n\t\t\t\tclearTimeout( timeoutHandle );\r\n\t\t\t\tclearInterval( intervalHandle );\r\n\t\t\t\tcallback();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tif ( isNodeJS ) {\r\n\t\thandleError = function( e ) {\r\n\t\t\tcurrentTrace = null;\r\n\t\t\trequestFlush();\r\n\t\t\tthrow e;\r\n\t\t};\r\n\r\n\t} else {\r\n\t\thandleError = function( e ) {\r\n\t\t\tpendingErrors.push( e );\r\n\t\t\trequestErrorThrow();\r\n\t\t}\r\n\t}\r\n\r\n\t//__________________________________________________________________________\r\n\r\n\tvar FULFILLED = 1;\r\n\tvar REJECTED = 2;\r\n\r\n\tvar OP_CALL = -1;\r\n\tvar OP_THEN = -2;\r\n\tvar OP_MULTIPLE = -3;\r\n\tvar OP_END = -4;\r\n\r\n\tvar VOID = P(void 0);\r\n\r\n\tfunction DoneEb( e ) {\r\n\t\tif ( P.onerror ) {\r\n\t\t\t(1,P.onerror)( e );\r\n\r\n\t\t} else {\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction P( x ) {\r\n\t\treturn x instanceof Promise ?\r\n\t\t\tx :\r\n\t\t\tResolve( new Promise(), x );\r\n\t}\r\n\r\n\tP.longStackSupport = false;\r\n\r\n\tfunction Fulfill( p, value ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tp._state = FULFILLED;\r\n\t\tp._value = value;\r\n\t\tp._domain = null;\r\n\r\n\t\tHandleSettled( p );\r\n\t}\r\n\r\n\tfunction Reject( p, reason ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif ( currentTrace ) {\r\n\t\t\tmakeStackTraceLong( reason );\r\n\t\t}\r\n\r\n\t\tp._state = REJECTED;\r\n\t\tp._value = reason;\r\n\r\n\t\tif ( isNodeJS ) {\r\n\t\t\tp._domain = process.domain;\r\n\t\t}\r\n\r\n\t\tif ( p._op === OP_END ) {\r\n\t\t\thandleError( reason );\r\n\r\n\t\t} else {\r\n\t\t\tHandleSettled( p );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction Propagate( parent, p ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tp._state = parent._state;\r\n\t\tp._value = parent._value;\r\n\t\tp._domain = parent._domain;\r\n\r\n\t\tHandleSettled( p );\r\n\t}\r\n\r\n\tfunction Resolve( p, x ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\treturn p;\r\n\t\t}\r\n\r\n\t\tif ( x instanceof Promise ) {\r\n\t\t\tResolveWithPromise( p, x );\r\n\r\n\t\t} else {\r\n\t\t\tvar type = typeof x;\r\n\r\n\t\t\tif ( type === \"object\" && x !== null || type === \"function\" ) {\r\n\t\t\t\tResolveWithObject( p, x )\r\n\r\n\t\t\t} else {\r\n\t\t\t\tFulfill( p, x );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn p;\r\n\t}\r\n\r\n\tfunction ResolveWithPromise( p, x ) {\r\n\t\tif ( x === p ) {\r\n\t\t\tReject( p, new TypeError(\"You can't resolve a promise with itself\") );\r\n\r\n\t\t} else if ( x._state > 0 ) {\r\n\t\t\tPropagate( x, p );\r\n\r\n\t\t} else {\r\n\t\t\tOnSettled( x, OP_THEN, p );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction ResolveWithObject( p, x ) {\r\n\t\tvar then = GetThen( p, x );\r\n\r\n\t\tif ( typeof then === \"function\" ) {\r\n\t\t\tTryResolver( resolverFor(p, false), then, x );\r\n\r\n\t\t} else {\r\n\t\t\tFulfill( p, x );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction GetThen( p, x ) {\r\n\t\ttry {\r\n\t\t\treturn x.then;\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\tReject( p, e );\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction TryResolver( d, resolver, x ) {\r\n\t\ttry {\r\n\t\t\tcall.call( resolver, x, d.resolve, d.reject );\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\td.reject( e );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction HandleSettled( p ) {\r\n\t\tif ( p._pending !== null ) {\r\n\t\t\tHandlePending( p, p._op, p._pending );\r\n\t\t\tp._pending = null;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction HandlePending( p, op, pending ) {\r\n\t\tif ( op >= 0 ) {\r\n\t\t\tpending._cb( p, op );\r\n\r\n\t\t} else if ( op === OP_CALL ) {\r\n\t\t\tpending( p );\r\n\r\n\t\t} else if ( op === OP_THEN ) {\r\n\t\t\tschedule( Then, p, pending );\r\n\r\n\t\t} else {\r\n\t\t\tfor ( var i = 0, l = pending.length; i < l; i += 2 ) {\r\n\t\t\t\tHandlePending( p, pending[i], pending[i + 1] );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction OnSettled( p, op, pending ) {\r\n\t\tif ( p._state > 0 ) {\r\n\t\t\tHandlePending( p, op, pending );\r\n\r\n\t\t} else if ( p._pending === null ) {\r\n\t\t\tp._pending = pending;\r\n\t\t\tp._op = op;\r\n\r\n\t\t} else if ( p._op === OP_MULTIPLE ) {\r\n\t\t\tp._pending.push( op, pending );\r\n\r\n\t\t} else {\r\n\t\t\tp._pending = [ p._op, p._pending, op, pending ];\r\n\t\t\tp._op = OP_MULTIPLE;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction Then( parent, p ) {\r\n\t\tvar cb = parent._state === FULFILLED ? p._cb : p._eb;\r\n\t\tp._cb = null;\r\n\t\tp._eb = null;\r\n\r\n\t\tif ( p._trace ) {\r\n\t\t\tcurrentTrace = p._trace;\r\n\t\t\tp._trace = null;\r\n\t\t}\r\n\r\n\t\tif ( cb === null ) {\r\n\t\t\tPropagate( parent, p );\r\n\r\n\t\t} else {\r\n\t\t\tHandleCallback( p, cb, parent._value, parent._domain || p._domain );\r\n\t\t}\r\n\t}\r\n\r\n\tfunction HandleCallback( p, cb, value, domain ) {\r\n\t\tif ( domain ) {\r\n\t\t\tif ( domain._disposed ) return;\r\n\t\t\tdomain.enter();\r\n\t\t}\r\n\r\n\t\ttry {\r\n\t\t\tvalue = cb( value );\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\tReject( p, e );\r\n\t\t\tp = null;\r\n\t\t}\r\n\r\n\t\tif ( p ) Resolve( p, value );\r\n\t\tif ( domain ) domain.exit();\r\n\t}\r\n\r\n\tfunction resolverFor( promise, nodelike ) {\r\n\t\tvar trace = P.longStackSupport ? getTrace() : null;\r\n\r\n\t\tfunction resolve( error, y ) {\r\n\t\t\tif ( promise ) {\r\n\t\t\t\tvar p = promise;\r\n\t\t\t\tpromise = null;\r\n\r\n\t\t\t\tif ( trace ) {\r\n\t\t\t\t\tif ( currentTrace ) {\r\n\t\t\t\t\t\ttrace = null;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcurrentTrace = trace;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( error ) {\r\n\t\t\t\t\tReject( p, nodelike ? error : y );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tResolve( p, y );\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( trace ) {\r\n\t\t\t\t\tcurrentTrace = trace = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn nodelike ? resolve : {\r\n\t\t\tpromise: promise,\r\n\r\n\t\t\tresolve: function( y ) {\r\n\t\t\t\tresolve( false, y );\r\n\t\t\t},\r\n\r\n\t\t\treject: function( reason ) {\r\n\t\t\t\tresolve( true, reason );\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\r\n\tP.defer = defer;\r\n\tfunction defer() {\r\n\t\treturn resolverFor( new Promise(), false );\r\n\t}\r\n\r\n\tP.reject = reject;\r\n\tfunction reject( reason ) {\r\n\t\tvar promise = new Promise();\r\n\t\tReject( promise, reason );\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tfunction Promise() {\r\n\t\tthis._state = 0;\r\n\t\tthis._value = void 0;\r\n\t\tthis._domain = null;\r\n\t\tthis._cb = null;\r\n\t\tthis._eb = null;\r\n\t\tthis._op = 0;\r\n\t\tthis._pending = null;\r\n\t\tthis._trace = null;\r\n\t}\r\n\r\n\tPromise.prototype.then = function( onFulfilled, onRejected ) {\r\n\t\tvar promise = new Promise();\r\n\r\n\t\tpromise._cb = typeof onFulfilled === \"function\" ? onFulfilled : null;\r\n\t\tpromise._eb = typeof onRejected === \"function\" ? onRejected : null;\r\n\r\n\t\tif ( P.longStackSupport ) {\r\n\t\t\tpromise._trace = getTrace();\r\n\t\t}\r\n\r\n\t\tif ( isNodeJS ) {\r\n\t\t\tpromise._domain = process.domain;\r\n\t\t}\r\n\r\n\t\tif ( this._state > 0 ) {\r\n\t\t\tschedule( Then, this, promise );\r\n\r\n\t\t} else {\r\n\t\t\tOnSettled( this, OP_THEN, promise );\r\n\t\t}\r\n\r\n\t\treturn promise;\r\n\t};\r\n\r\n\tPromise.prototype.done = function( cb, eb ) {\r\n\t\tvar p = this;\r\n\r\n\t\tif ( cb || eb ) {\r\n\t\t\tp = p.then( cb, eb );\r\n\t\t}\r\n\r\n\t\tp.then( null, DoneEb )._op = OP_END;\r\n\t};\r\n\r\n\tPromise.prototype.fail = function( eb ) {\r\n\t\treturn this.then( null, eb );\r\n\t};\r\n\r\n\tPromise.prototype.fin = function( finback ) {\r\n\t\tvar self = this;\r\n\r\n\t\tfunction fb() {\r\n\t\t\treturn finback();\r\n\t\t}\r\n\r\n\t\treturn self.then( fb, fb ).then(function() {\r\n\t\t\treturn self;\r\n\t\t});\r\n\t};\r\n\r\n\tPromise.prototype.spread = function( cb, eb ) {\r\n\t\treturn this.then( all ).then(function( args ) {\r\n\t\t\treturn apply.call( cb, void 0, args );\r\n\t\t}, eb);\r\n\t};\r\n\r\n\tPromise.prototype.timeout = function( ms, msg ) {\r\n\t\tvar promise = new Promise();\r\n\r\n\t\tif ( this._state > 0 ) {\r\n\t\t\tPropagate( this, promise );\r\n\r\n\t\t} else {\r\n\t\t\tvar timedout = false;\r\n\t\t\tvar trace = P.longStackSupport ? getTrace() : null;\r\n\r\n\t\t\tvar timeoutId = setTimeout(function() {\r\n\t\t\t\ttimedout = true;\r\n\t\t\t\tcurrentTrace = trace;\r\n\t\t\t\tReject( promise, new Error(msg || \"Timed out after \" + ms + \" ms\") );\r\n\t\t\t\tcurrentTrace = null;\r\n\t\t\t}, ms);\r\n\r\n\t\t\tOnSettled(this, OP_CALL, function( p ) {\r\n\t\t\t\tif ( !timedout ) {\r\n\t\t\t\t\tschedule( Propagate, p, promise );\r\n\t\t\t\t\tclearTimeout( timeoutId );\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\treturn promise;\r\n\t};\r\n\r\n\tPromise.prototype.delay = function( ms ) {\r\n\t\tvar promise = new Promise();\r\n\r\n\t\tOnSettled(this, OP_CALL, function( p ) {\r\n\t\t\tif ( p._state === FULFILLED ) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tPropagate( p, promise );\r\n\t\t\t\t}, ms);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tschedule( Propagate, p, promise );\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\treturn promise;\r\n\t};\r\n\r\n\tPromise.prototype.all = function() {\r\n\t\treturn this.then( all );\r\n\t};\r\n\r\n\tPromise.prototype.allSettled = function() {\r\n\t\treturn this.then( allSettled );\r\n\t};\r\n\r\n\tPromise.prototype.inspect = function() {\r\n\t\tswitch ( this._state ) {\r\n\t\t\tcase FULFILLED: return { state: \"fulfilled\", value: this._value };\r\n\t\t\tcase REJECTED:  return { state: \"rejected\", reason: this._value };\r\n\t\t\tdefault:\t\treturn { state: \"pending\" };\r\n\t\t}\r\n\t};\r\n\r\n\tPromise.prototype.nodeify = function( nodeback ) {\r\n\t\tif ( nodeback ) {\r\n\t\t\tthis.done(function( value ) {\r\n\t\t\t\tnodeback( null, value );\r\n\t\t\t}, nodeback);\r\n\t\t\treturn void 0;\r\n\r\n\t\t} else {\r\n\t\t\treturn this;\r\n\t\t}\r\n\t};\r\n\r\n\tfunction _allSettled_cb( p, i ) {\r\n\t\tthis._value[ i ] = p.inspect();\r\n\t\tif ( ++this._state === 0 ) {\r\n\t\t\tif ( this._pending === null ) {\r\n\t\t\t\tthis._state = FULFILLED;\r\n\t\t\t} else {\r\n\t\t\t\tschedule( Fulfill, this, this._value );\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction _all_cb( p, i ) {\r\n\t\tif ( this._state < 0 ) {\r\n\t\t\tif ( p._state === REJECTED ) {\r\n\t\t\t\tthis._state = 0;\r\n\t\t\t\tif ( this._pending === null ) {\r\n\t\t\t\t\tPropagate( p, this );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tschedule( Propagate, p, this );\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis._value[ i ] = p._value;\r\n\t\t\t\tif ( ++this._state === 0 ) {\r\n\t\t\t\t\tif ( this._pending === null ) {\r\n\t\t\t\t\t\tthis._state = FULFILLED;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tschedule( Fulfill, this, this._value );\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar nextIsAllSettled = false;\r\n\r\n\tP.all = all;\r\n\tfunction all( input ) {\r\n\t\tvar promise = new Promise();\r\n\t\tpromise._cb = nextIsAllSettled ? _allSettled_cb : _all_cb;\r\n\t\tnextIsAllSettled = false;\r\n\r\n\t\tvar len = input.length|0;\r\n\r\n\t\tpromise._state = len ? -len : FULFILLED;\r\n\t\tpromise._value = new Array( len );\r\n\r\n\t\tfor ( var i = 0; i < len && promise._state < 0; ++i ) {\r\n\t\t\tOnSettled( P(input[i]), i, promise );\r\n\t\t}\r\n\r\n\t\treturn promise;\r\n\t}\r\n\r\n\tP.allSettled = allSettled;\r\n\tfunction allSettled( input ) {\r\n\t\tnextIsAllSettled = true;\r\n\t\treturn all( input );\r\n\t}\r\n\r\n\tP.spread = spread;\r\n\tfunction spread( values, cb, eb ) {\r\n\t\treturn all( values ).then(function( args ) {\r\n\t\t\treturn apply.call( cb, void 0, args );\r\n\t\t}, eb);\r\n\t}\r\n\r\n\tP.promised = promised;\r\n\tfunction promised( f ) {\r\n\t\tfunction onFulfilled( thisAndArgs ) {\r\n\t\t\treturn call.apply( f, thisAndArgs );\r\n\t\t}\r\n\r\n\t\treturn function() {\r\n\t\t\tvar len = arguments.length;\r\n\t\t\tvar thisAndArgs = new Array( len + 1 );\r\n\t\t\tthisAndArgs[0] = this;\r\n\t\t\tfor ( var i = 0; i < len; ++i ) {\r\n\t\t\t\tthisAndArgs[ i + 1 ] = arguments[ i ];\r\n\t\t\t}\r\n\t\t\treturn all( thisAndArgs ).then( onFulfilled );\r\n\t\t};\r\n\t}\r\n\r\n\tP.denodeify = denodeify;\r\n\tfunction denodeify( f ) {\r\n\t\treturn function() {\r\n\t\t\tvar promise = new Promise();\r\n\r\n\t\t\tvar i = arguments.length;\r\n\t\t\tvar args = new Array( i + 1 );\r\n\t\t\targs[i] = resolverFor( promise, true );\r\n\t\t\twhile ( i-- ) {\r\n\t\t\t\targs[i] = arguments[i];\r\n\t\t\t}\r\n\r\n\t\t\tTryApply( promise, f, this, args );\r\n\r\n\t\t\treturn promise;\r\n\t\t};\r\n\t}\r\n\r\n\tfunction TryApply( p, f, that, args ) {\r\n\t\ttry {\r\n\t\t\tapply.call( f, that, args );\r\n\r\n\t\t} catch ( e ) {\r\n\t\t\tReject( p, e );\r\n\t\t}\r\n\t}\r\n\r\n\tP.onerror = null;\r\n\r\n\tP.nextTick = function nextTick( task ) {\r\n\t\t// We don't use .done to avoid P.onerror.\r\n\t\tVOID.then(function() {\r\n\t\t\ttask.call();\r\n\t\t})._op = OP_END;\r\n\t};\r\n\r\n\tvar pEndingLine = captureLine();\r\n\r\n\treturn P;\r\n});\r\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawk',['sjcl'], function (sjcl) {\n  'use strict';\n\n  /*\n   HTTP Hawk Authentication Scheme\n   Copyright (c) 2012-2013, Eran Hammer <eran@hueniverse.com>\n   MIT Licensed\n   */\n\n\n  // Declare namespace\n\n  var hawk = {};\n\n  hawk.client = {\n\n    // Generate an Authorization header for a given request\n\n    /*\n     uri: 'http://example.com/resource?a=b'\n     method: HTTP verb (e.g. 'GET', 'POST')\n     options: {\n\n     // Required\n\n     credentials: {\n     id: 'dh37fgj492je',\n     key: 'aoijedoaijsdlaksjdl',\n     algorithm: 'sha256'                                 // 'sha1', 'sha256'\n     },\n\n     // Optional\n\n     ext: 'application-specific',                        // Application specific data sent via the ext attribute\n     timestamp: Date.now() / 1000,                       // A pre-calculated timestamp in seconds\n     nonce: '2334f34f',                                  // A pre-generated nonce\n     localtimeOffsetMsec: 400,                           // Time offset to sync with server time (ignored if timestamp provided)\n     payload: '{\"some\":\"payload\"}',                      // UTF-8 encoded string for body hash generation (ignored if hash provided)\n     contentType: 'application/json',                    // Payload content-type (ignored if hash provided)\n     hash: 'U4MKKSmiVxk37JCCrAVIjV=',                    // Pre-calculated payload hash\n     app: '24s23423f34dx',                               // Oz application id\n     dlg: '234sz34tww3sd'                                // Oz delegated-by application id\n     }\n     */\n\n    header: function (uri, method, options) {\n      /*eslint complexity: [2, 21] */\n      var result = {\n        field: '',\n        artifacts: {}\n      };\n\n      // Validate inputs\n\n      if (!uri || (typeof uri !== 'string' && typeof uri !== 'object') ||\n        !method || typeof method !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        result.err = 'Invalid argument type';\n        return result;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        result.err = 'Invalid credential object';\n        return result;\n      }\n\n      if (hawk.utils.baseIndexOf(hawk.crypto.algorithms, credentials.algorithm) === -1) {\n        result.err = 'Unknown algorithm';\n        return result;\n      }\n\n      // Parse URI\n\n      if (typeof uri === 'string') {\n        uri = hawk.utils.parseUri(uri);\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        method: method,\n        resource: uri.relative,\n        host: uri.hostname,\n        port: uri.port,\n        hash: options.hash,\n        ext: options.ext,\n        app: options.app,\n        dlg: options.dlg\n      };\n\n      result.artifacts = artifacts;\n\n      // Calculate payload hash\n\n      if (!artifacts.hash &&\n        options.hasOwnProperty('payload')) {\n\n        artifacts.hash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, options.contentType);\n      }\n\n      var mac = hawk.crypto.calculateMac('header', credentials, artifacts);\n\n      // Construct header\n\n      var hasExt = artifacts.ext !== null && artifacts.ext !== undefined && artifacts.ext !== '';       // Other falsey values allowed\n      var header = 'Hawk id=\"' + credentials.id +\n        '\", ts=\"' + artifacts.ts +\n        '\", nonce=\"' + artifacts.nonce +\n        (artifacts.hash ? '\", hash=\"' + artifacts.hash : '') +\n        (hasExt ? '\", ext=\"' + hawk.utils.escapeHeaderAttribute(artifacts.ext) : '') +\n        '\", mac=\"' + mac + '\"';\n\n      if (artifacts.app) {\n        header += ', app=\"' + artifacts.app +\n          (artifacts.dlg ? '\", dlg=\"' + artifacts.dlg : '') + '\"';\n      }\n\n      result.field = header;\n\n      return result;\n    },\n\n\n    // Validate server response\n\n    /*\n     request:    object created via 'new XMLHttpRequest()' after response received\n     artifacts:  object recieved from header().artifacts\n     options: {\n     payload:    optional payload received\n     required:   specifies if a Server-Authorization header is required. Defaults to 'false'\n     }\n     */\n\n    authenticate: function (request, credentials, artifacts, options) {\n\n      options = options || {};\n\n      if (request.getResponseHeader('www-authenticate')) {\n\n        // Parse HTTP WWW-Authenticate header\n\n        var attrsAuth = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('www-authenticate'), ['ts', 'tsm', 'error']);\n        if (!attrsAuth) {\n          return false;\n        }\n\n        if (attrsAuth.ts) {\n          var tsm = hawk.crypto.calculateTsMac(attrsAuth.ts, credentials);\n          if (tsm !== attrsAuth.tsm) {\n            return false;\n          }\n\n          hawk.utils.setNtpOffset(attrsAuth.ts - Math.floor((new Date()).getTime() / 1000));     // Keep offset at 1 second precision\n        }\n      }\n\n      // Parse HTTP Server-Authorization header\n\n      if (!request.getResponseHeader('server-authorization') &&\n        !options.required) {\n\n        return true;\n      }\n\n      var attributes = hawk.utils.parseAuthorizationHeader(request.getResponseHeader('server-authorization'), ['mac', 'ext', 'hash']);\n      if (!attributes) {\n        return false;\n      }\n\n      var modArtifacts = {\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        method: artifacts.method,\n        resource: artifacts.resource,\n        host: artifacts.host,\n        port: artifacts.port,\n        hash: attributes.hash,\n        ext: attributes.ext,\n        app: artifacts.app,\n        dlg: artifacts.dlg\n      };\n\n      var mac = hawk.crypto.calculateMac('response', credentials, modArtifacts);\n      if (mac !== attributes.mac) {\n        return false;\n      }\n\n      if (!options.hasOwnProperty('payload')) {\n        return true;\n      }\n\n      if (!attributes.hash) {\n        return false;\n      }\n\n      var calculatedHash = hawk.crypto.calculatePayloadHash(options.payload, credentials.algorithm, request.getResponseHeader('content-type'));\n      return (calculatedHash === attributes.hash);\n    },\n\n    message: function (host, port, message, options) {\n\n      // Validate inputs\n\n      if (!host || typeof host !== 'string' ||\n        !port || typeof port !== 'number' ||\n        message === null || message === undefined || typeof message !== 'string' ||\n        !options || typeof options !== 'object') {\n\n        return null;\n      }\n\n      // Application time\n\n      var timestamp = options.timestamp || Math.floor((hawk.utils.now() + (options.localtimeOffsetMsec || 0)) / 1000);\n\n      // Validate credentials\n\n      var credentials = options.credentials;\n      if (!credentials ||\n        !credentials.id ||\n        !credentials.key ||\n        !credentials.algorithm) {\n\n        // Invalid credential object\n        return null;\n      }\n\n      if (hawk.crypto.algorithms.indexOf(credentials.algorithm) === -1) {\n        return null;\n      }\n\n      // Calculate signature\n\n      var artifacts = {\n        ts: timestamp,\n        nonce: options.nonce || hawk.utils.randomString(6),\n        host: host,\n        port: port,\n        hash: hawk.crypto.calculatePayloadHash(message, credentials.algorithm)\n      };\n\n      // Construct authorization\n\n      var result = {\n        id: credentials.id,\n        ts: artifacts.ts,\n        nonce: artifacts.nonce,\n        hash: artifacts.hash,\n        mac: hawk.crypto.calculateMac('message', credentials, artifacts)\n      };\n\n      return result;\n    },\n\n    authenticateTimestamp: function (message, credentials, updateClock) {           // updateClock defaults to true\n\n      var tsm = hawk.crypto.calculateTsMac(message.ts, credentials);\n      if (tsm !== message.tsm) {\n        return false;\n      }\n\n      if (updateClock !== false) {\n        hawk.utils.setNtpOffset(message.ts - Math.floor((new Date()).getTime() / 1000));    // Keep offset at 1 second precision\n      }\n\n      return true;\n    }\n  };\n\n\n  hawk.crypto = {\n\n    headerVersion: '1',\n\n    algorithms: ['sha1', 'sha256'],\n\n    calculateMac: function (type, credentials, options) {\n      var normalized = hawk.crypto.generateNormalizedString(type, options);\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update(normalized);\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    },\n\n    generateNormalizedString: function (type, options) {\n\n      var normalized = 'hawk.' + hawk.crypto.headerVersion + '.' + type + '\\n' +\n        options.ts + '\\n' +\n        options.nonce + '\\n' +\n        (options.method || '').toUpperCase() + '\\n' +\n        (options.resource || '') + '\\n' +\n        options.host.toLowerCase() + '\\n' +\n        options.port + '\\n' +\n        (options.hash || '') + '\\n';\n\n      if (options.ext) {\n        normalized += options.ext.replace('\\\\', '\\\\\\\\').replace('\\n', '\\\\n');\n      }\n\n      normalized += '\\n';\n\n      if (options.app) {\n        normalized += options.app + '\\n' +\n          (options.dlg || '') + '\\n';\n      }\n\n      return normalized;\n    },\n\n    calculatePayloadHash: function (payload, algorithm, contentType) {\n      var hash = new sjcl.hash.sha256();\n      hash.update('hawk.' + hawk.crypto.headerVersion + '.payload\\n')\n        .update(hawk.utils.parseContentType(contentType) + '\\n')\n        .update(payload || '')\n        .update('\\n');\n\n      return sjcl.codec.base64.fromBits(hash.finalize());\n    },\n\n    calculateTsMac: function (ts, credentials) {\n      var hmac = new sjcl.misc.hmac(credentials.key, sjcl.hash.sha256);\n      hmac.update('hawk.' + hawk.crypto.headerVersion + '.ts\\n' + ts + '\\n');\n\n      return sjcl.codec.base64.fromBits(hmac.digest());\n    }\n  };\n\n\n  hawk.utils = {\n\n    storage: {                                      // localStorage compatible interface\n      _cache: {},\n      setItem: function (key, value) {\n\n        hawk.utils.storage._cache[key] = value;\n      },\n      getItem: function (key) {\n\n        return hawk.utils.storage._cache[key];\n      }\n    },\n\n    setStorage: function (storage) {\n\n      var ntpOffset = hawk.utils.getNtpOffset() || 0;\n      hawk.utils.storage = storage;\n      hawk.utils.setNtpOffset(ntpOffset);\n    },\n\n    setNtpOffset: function (offset) {\n\n      try {\n        hawk.utils.storage.setItem('hawk_ntp_offset', offset);\n      }\n      catch (err) {\n        console.error('[hawk] could not write to storage.');\n        console.error(err);\n      }\n    },\n\n    getNtpOffset: function () {\n\n      return parseInt(hawk.utils.storage.getItem('hawk_ntp_offset') || '0', 10);\n    },\n\n    now: function () {\n\n      return (new Date()).getTime() + hawk.utils.getNtpOffset();\n    },\n\n    escapeHeaderAttribute: function (attribute) {\n\n      return attribute.replace(/\\\\/g, '\\\\\\\\').replace(/\\\"/g, '\\\\\"');\n    },\n\n    parseContentType: function (header) {\n\n      if (!header) {\n        return '';\n      }\n\n      return header.split(';')[0].replace(/^\\s+|\\s+$/g, '').toLowerCase();\n    },\n\n    parseAuthorizationHeader: function (header, keys) {\n\n      if (!header) {\n        return null;\n      }\n\n      var headerParts = header.match(/^(\\w+)(?:\\s+(.*))?$/);       // Header: scheme[ something]\n      if (!headerParts) {\n        return null;\n      }\n\n      var scheme = headerParts[1];\n      if (scheme.toLowerCase() !== 'hawk') {\n        return null;\n      }\n\n      var attributesString = headerParts[2];\n      if (!attributesString) {\n        return null;\n      }\n\n      var attributes = {};\n      var verify = attributesString.replace(/(\\w+)=\"([^\"\\\\]*)\"\\s*(?:,\\s*|$)/g, function ($0, $1, $2) {\n\n        // Check valid attribute names\n\n        if (keys.indexOf($1) === -1) {\n          return;\n        }\n\n        // Allowed attribute value characters: !#$%&'()*+,-./:;<=>?@[]^_`{|}~ and space, a-z, A-Z, 0-9\n\n        if ($2.match(/^[ \\w\\!#\\$%&'\\(\\)\\*\\+,\\-\\.\\/\\:;<\\=>\\?@\\[\\]\\^`\\{\\|\\}~]+$/) === null) {\n          return;\n        }\n\n        // Check for duplicates\n\n        if (attributes.hasOwnProperty($1)) {\n          return;\n        }\n\n        attributes[$1] = $2;\n        return '';\n      });\n\n      if (verify !== '') {\n        return null;\n      }\n\n      return attributes;\n    },\n\n    randomString: function (size) {\n\n      var randomSource = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n      var len = randomSource.length;\n\n      var result = [];\n      for (var i = 0; i < size; ++i) {\n        result[i] = randomSource[Math.floor(Math.random() * len)];\n      }\n\n      return result.join('');\n    },\n\n    baseIndexOf: function(array, value, fromIndex) {\n      var index = (fromIndex || 0) - 1,\n        length = array ? array.length : 0;\n\n      while (++index < length) {\n        if (array[index] === value) {\n          return index;\n        }\n      }\n      return -1;\n    },\n\n    parseUri: function (input) {\n\n      // Based on: parseURI 1.2.2\n      // http://blog.stevenlevithan.com/archives/parseuri\n      // (c) Steven Levithan <stevenlevithan.com>\n      // MIT License\n\n      var keys = ['source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'hostname', 'port', 'resource', 'relative', 'pathname', 'directory', 'file', 'query', 'fragment'];\n\n      var uriRegex = /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?)(?:#(.*))?)/;\n      var uriByNumber = uriRegex.exec(input);\n      var uri = {};\n\n      var i = 15;\n      while (i--) {\n        uri[keys[i]] = uriByNumber[i] || '';\n      }\n\n      if (uri.port === null ||\n        uri.port === '') {\n\n        uri.port = (uri.protocol.toLowerCase() === 'http' ? '80' : (uri.protocol.toLowerCase() === 'https' ? '443' : ''));\n      }\n\n      return uri;\n    }\n  };\n\n\n  return hawk;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/errors',[], function () {\n  return {\n    INVALID_TIMESTAMP: 111,\n    INCORRECT_EMAIL_CASE: 120\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/request',['./hawk', 'p', './errors'], function (hawk, P, ERRORS) {\n  'use strict';\n  /* global XMLHttpRequest */\n\n  /**\n   * @class Request\n   * @constructor\n   * @param {String} baseUri Base URI\n   * @param {Object} xhr XMLHttpRequest constructor\n   * @param {Object} [options={}] Options\n   *   @param {Number} [options.localtimeOffsetMsec]\n   *   Local time offset with the remote auth server's clock\n   */\n  function Request (baseUri, xhr, options) {\n    if (!options) {\n      options = {};\n    }\n    this.baseUri = baseUri;\n    this._localtimeOffsetMsec = options.localtimeOffsetMsec;\n    this.xhr = xhr || XMLHttpRequest;\n    this.timeout = options.timeout || 30 * 1000;\n  }\n\n  /**\n   * @method send\n   * @param {String} path Request path\n   * @param {String} method HTTP Method\n   * @param {Object} credentials HAWK Headers\n   * @param {Object} jsonPayload JSON Payload\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.retrying]\n   *   Flag indicating if the request is a retry\n   *   @param {Array} [options.headers]\n   *   A set of extra headers to add to the request\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  Request.prototype.send = function request(path, method, credentials, jsonPayload, options) {\n    /*eslint complexity: [2, 8] */\n    var deferred = P.defer();\n    var xhr = new this.xhr();\n    var uri = this.baseUri + path;\n    var payload = null;\n    var self = this;\n    options = options || {};\n\n    if (jsonPayload) {\n      payload = JSON.stringify(jsonPayload);\n    }\n\n    try {\n      xhr.open(method, uri);\n    } catch (e) {\n      return P.reject({ error: 'Unknown error', message: e.toString(), errno: 999 });\n    }\n\n    xhr.timeout = this.timeout;\n\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        var result = xhr.responseText;\n        try {\n          result = JSON.parse(xhr.responseText);\n        } catch (e) { }\n\n        if (result.errno) {\n          // Try to recover from a timeskew error and not already tried\n          if (result.errno === ERRORS.INVALID_TIMESTAMP && !options.retrying) {\n            var serverTime = result.serverTime;\n            self._localtimeOffsetMsec = (serverTime * 1000) - new Date().getTime();\n\n            // add to options that the request is retrying\n            options.retrying = true;\n\n            return self.send(path, method, credentials, jsonPayload, options)\n              .then(deferred.resolve, deferred.reject);\n\n          } else {\n            return deferred.reject(result);\n          }\n        }\n\n        if (typeof xhr.status === 'undefined' || xhr.status !== 200) {\n          if (result.length === 0) {\n            return deferred.reject({ error: 'Timeout error', errno: 999 });\n          } else {\n            return deferred.reject({ error: 'Unknown error', message: result, errno: 999, code: xhr.status });\n          }\n        }\n\n        deferred.resolve(result);\n      }\n    };\n\n    // calculate Hawk header if credentials are supplied\n    if (credentials) {\n      var hawkHeader = hawk.client.header(uri, method, {\n                          credentials: credentials,\n                          payload: payload,\n                          contentType: 'application/json',\n                          localtimeOffsetMsec: this._localtimeOffsetMsec || 0\n                        });\n      xhr.setRequestHeader('authorization', hawkHeader.field);\n    }\n\n    xhr.setRequestHeader('Content-Type', 'application/json');\n\n    if (options && options.headers) {\n      // set extra headers for this request\n      for (var header in options.headers) {\n        xhr.setRequestHeader(header, options.headers[header]);\n      }\n    }\n\n    xhr.send(payload);\n\n    return deferred.promise;\n  };\n\n  return Request;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hkdf',['sjcl', 'p'], function (sjcl, P) {\n  'use strict';\n\n  /**\n   * hkdf - The HMAC-based Key Derivation Function\n   * based on https://github.com/mozilla/node-hkdf\n   *\n   * @class hkdf\n   * @param {bitArray} ikm Initial keying material\n   * @param {bitArray} info Key derivation data\n   * @param {bitArray} salt Salt\n   * @param {integer} length Length of the derived key in bytes\n   * @return promise object- It will resolve with `output` data\n   */\n  function hkdf(ikm, info, salt, length) {\n\n    var mac = new sjcl.misc.hmac(salt, sjcl.hash.sha256);\n    mac.update(ikm);\n\n    // compute the PRK\n    var prk = mac.digest();\n\n    // hash length is 32 because only sjcl.hash.sha256 is used at this moment\n    var hashLength = 32;\n    var num_blocks = Math.ceil(length / hashLength);\n    var prev = sjcl.codec.hex.toBits('');\n    var output = '';\n\n    for (var i = 0; i < num_blocks; i++) {\n      var hmac = new sjcl.misc.hmac(prk, sjcl.hash.sha256);\n\n      var input = sjcl.bitArray.concat(\n        sjcl.bitArray.concat(prev, info),\n        sjcl.codec.utf8String.toBits((String.fromCharCode(i + 1)))\n      );\n\n      hmac.update(input);\n\n      prev = hmac.digest();\n      output += sjcl.codec.hex.fromBits(prev);\n    }\n\n    var truncated = sjcl.bitArray.clamp(sjcl.codec.hex.toBits(output), length * 8);\n\n    return P(truncated);\n  }\n\n  return hkdf;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/pbkdf2',['sjcl', 'p'], function (sjcl, P) {\n  'use strict';\n\n  /**\n   * @class pbkdf2\n   * @constructor\n   */\n  var pbkdf2 = {\n    /**\n     * @method derive\n     * @param  {bitArray} input The password hex buffer.\n     * @param  {bitArray} salt The salt string buffer.\n     * @return {int} iterations the derived key bit array.\n     */\n    derive: function(input, salt, iterations, len) {\n      var result = sjcl.misc.pbkdf2(input, salt, iterations, len, sjcl.misc.hmac);\n      return P(result);\n    }\n  };\n\n  return pbkdf2;\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/credentials',['./request', 'sjcl', 'p', './hkdf', './pbkdf2'], function (Request, sjcl, P, hkdf, pbkdf2) {\n  'use strict';\n\n  // Key wrapping and stretching configuration.\n  var NAMESPACE = 'identity.mozilla.com/picl/v1/';\n  var PBKDF2_ROUNDS = 1000;\n  var STRETCHED_PASS_LENGTH_BYTES = 32 * 8;\n\n  var HKDF_SALT = sjcl.codec.hex.toBits('00');\n  var HKDF_LENGTH = 32;\n\n  /**\n   * Key Wrapping with a name\n   *\n   * @method kw\n   * @static\n   * @param {String} name The name of the salt\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kw(name) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name);\n  }\n\n  /**\n   * Key Wrapping with a name and an email\n   *\n   * @method kwe\n   * @static\n   * @param {String} name The name of the salt\n   * @param {String} email The email of the user.\n   * @return {bitArray} the salt combination with the namespace\n   */\n  function kwe(name, email) {\n    return sjcl.codec.utf8String.toBits(NAMESPACE + name + ':' + email);\n  }\n\n  /**\n   * @class credentials\n   * @constructor\n   */\n  return {\n    /**\n     * Setup credentials\n     *\n     * @method setup\n     * @param {String} emailInput\n     * @param {String} passwordInput\n     * @return {Promise} A promise that will be fulfilled with `result` of generated credentials\n     */\n    setup: function (emailInput, passwordInput) {\n      var result = {};\n      var email = kwe('quickStretch', emailInput);\n      var password = sjcl.codec.utf8String.toBits(passwordInput);\n\n      result.emailUTF8 = emailInput;\n      result.passwordUTF8 = passwordInput;\n\n      return pbkdf2.derive(password, email, PBKDF2_ROUNDS, STRETCHED_PASS_LENGTH_BYTES)\n        .then(\n        function (quickStretchedPW) {\n          result.quickStretchedPW = quickStretchedPW;\n\n          return hkdf(quickStretchedPW, kw('authPW'), HKDF_SALT, HKDF_LENGTH)\n            .then(\n            function (authPW) {\n              result.authPW = authPW;\n\n              return hkdf(quickStretchedPW, kw('unwrapBkey'), HKDF_SALT, HKDF_LENGTH);\n            }\n          );\n        }\n      )\n        .then(\n        function (unwrapBKey) {\n          result.unwrapBKey = unwrapBKey;\n          return result;\n        }\n      );\n    },\n    /**\n     * Wrap\n     *\n     * @method wrap\n     * @param {bitArray} bitArray1\n     * @param {bitArray} bitArray2\n     * @return {bitArray} wrap result of the two bitArrays\n     */\n    xor: function (bitArray1, bitArray2) {\n      var result = [];\n\n      for (var i = 0; i < bitArray1.length; i++) {\n        result[i] = bitArray1[i] ^ bitArray2[i];\n      }\n\n      return result;\n    },\n    /**\n     * Unbundle the WrapKB\n     * @param {String} key Bundle Key in hex\n     * @param {String} bundle Key bundle in hex\n     * @returns {*}\n     */\n    unbundleKeyFetchResponse: function (key, bundle) {\n      var self = this;\n      var bitBundle = sjcl.codec.hex.toBits(bundle);\n\n      return this.deriveBundleKeys(key, 'account/keys')\n        .then(\n          function (keys) {\n            var ciphertext = sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64);\n            var expectedHmac = sjcl.bitArray.bitSlice(bitBundle, 8 * -32);\n            var hmac = new sjcl.misc.hmac(keys.hmacKey, sjcl.hash.sha256);\n            hmac.update(ciphertext);\n\n            if (!sjcl.bitArray.equal(hmac.digest(), expectedHmac)) {\n              throw new Error('Bad HMac');\n            }\n\n            var keyAWrapB = self.xor(sjcl.bitArray.bitSlice(bitBundle, 0, 8 * 64), keys.xorKey);\n\n            return {\n              kA: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 0, 8 * 32)),\n              wrapKB: sjcl.codec.hex.fromBits(sjcl.bitArray.bitSlice(keyAWrapB, 8 * 32))\n            };\n          }\n        );\n    },\n    /**\n     * Derive the HMAC and XOR keys required to encrypt a given size of payload.\n     * @param {String} key Hex Bundle Key\n     * @param {String} keyInfo Bundle Key Info\n     * @returns {Object} hmacKey, xorKey\n     */\n    deriveBundleKeys: function(key, keyInfo) {\n      var bitKeyInfo = kw(keyInfo);\n      var salt = sjcl.codec.hex.toBits('');\n      key = sjcl.codec.hex.toBits(key);\n\n      return hkdf(key, bitKeyInfo, salt, 3 * 32)\n        .then(\n          function (keyMaterial) {\n\n            return {\n              hmacKey: sjcl.bitArray.bitSlice(keyMaterial, 0, 8 * 32),\n              xorKey: sjcl.bitArray.bitSlice(keyMaterial, 8 * 32)\n            };\n          }\n        );\n    }\n  };\n\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/lib/hawkCredentials',['sjcl', './hkdf'], function (sjcl, hkdf) {\n  'use strict';\n\n  var PREFIX_NAME = 'identity.mozilla.com/picl/v1/';\n  var bitSlice = sjcl.bitArray.bitSlice;\n  var salt = sjcl.codec.hex.toBits('');\n\n  /**\n   * @class hawkCredentials\n   * @method deriveHawkCredentials\n   * @param {String} tokenHex\n   * @param {String} context\n   * @param {int} size\n   * @returns {Promise}\n   */\n  function deriveHawkCredentials(tokenHex, context, size) {\n    var token = sjcl.codec.hex.toBits(tokenHex);\n    var info = sjcl.codec.utf8String.toBits(PREFIX_NAME + context);\n\n    return hkdf(token, info, salt, size || 3 * 32)\n      .then(function(out) {\n        var authKey = bitSlice(out, 8 * 32, 8 * 64);\n        var bundleKey = bitSlice(out, 8 * 64);\n\n        return {\n          algorithm: 'sha256',\n          id: sjcl.codec.hex.fromBits(bitSlice(out, 0, 8 * 32)),\n          key: authKey,\n          bundleKey: bundleKey\n        };\n      });\n  }\n\n  return deriveHawkCredentials;\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\n\n// This module does the handling for the metrics context\n// activity event metadata.\n\ndefine('client/lib/metricsContext',[], function () {\n  'use strict';\n\n  return {\n    marshall: function (data) {\n      return {\n        deviceId: data.deviceId,\n        flowId: data.flowId,\n        flowBeginTime: data.flowBeginTime,\n        utmCampaign: data.utmCampaign,\n        utmContent: data.utmContent,\n        utmMedium: data.utmMedium,\n        utmSource: data.utmSource,\n        utmTerm: data.utmTerm\n      };\n    }\n  };\n});\n\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/. */\ndefine('client/FxAccountClient',[\n  'sjcl',\n  'p',\n  './lib/credentials',\n  './lib/errors',\n  './lib/hawkCredentials',\n  './lib/metricsContext',\n  './lib/request',\n], function (sjcl, P, credentials, ERRORS, hawkCredentials, metricsContext, Request) {\n  'use strict';\n\n  var VERSION = 'v1';\n  var uriVersionRegExp = new RegExp('/' + VERSION + '$');\n  var HKDF_SIZE = 2 * 32;\n\n  function isUndefined(val) {\n    return typeof val === 'undefined';\n  }\n\n  function isNull(val) {\n    return val === null;\n  }\n\n  function isEmptyObject(val) {\n    return Object.prototype.toString.call(val) === '[object Object]' && ! Object.keys(val).length;\n  }\n\n  function isEmptyString(val) {\n    return val === '';\n  }\n\n  function required(val, name) {\n    if (isUndefined(val) ||\n        isNull(val) ||\n        isEmptyObject(val) ||\n        isEmptyString(val)) {\n      throw new Error('Missing ' + name);\n    }\n  }\n\n  /**\n   * @class FxAccountClient\n   * @constructor\n   * @param {String} uri Auth Server URI\n   * @param {Object} config Configuration\n   */\n  function FxAccountClient(uri, config) {\n    if (! uri && ! config) {\n      throw new Error('Firefox Accounts auth server endpoint or configuration object required.');\n    }\n\n    if (typeof uri !== 'string') {\n      config = uri || {};\n      uri = config.uri;\n    }\n\n    if (typeof config === 'undefined') {\n      config = {};\n    }\n\n    if (! uri) {\n      throw new Error('FxA auth server uri not set.');\n    }\n\n    if (!uriVersionRegExp.test(uri)) {\n      uri = uri + '/' + VERSION;\n    }\n\n    this.request = new Request(uri, config.xhr, { localtimeOffsetMsec: config.localtimeOffsetMsec });\n  }\n\n  FxAccountClient.VERSION = VERSION;\n\n  /**\n   * @method signUp\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.preVerified]\n   *   set email to be verified if possible\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signUp = function (email, password, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          /*eslint complexity: [2, 13] */\n          var endpoint = '/account/create';\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n          var requestOpts = {};\n\n          if (options) {\n            if (options.service) {\n              data.service = options.service;\n            }\n\n            if (options.redirectTo) {\n              data.redirectTo = options.redirectTo;\n            }\n\n            // preVerified is used for unit/functional testing\n            if (options.preVerified) {\n              data.preVerified = options.preVerified;\n            }\n\n            if (options.resume) {\n              data.resume = options.resume;\n            }\n\n            if (options.keys) {\n              endpoint += '?keys=true';\n            }\n\n            if (options.lang) {\n              requestOpts.headers = {\n                'Accept-Language': options.lang\n              };\n            }\n\n            if (options.metricsContext) {\n              data.metricsContext = metricsContext.marshall(options.metricsContext);\n            }\n          }\n\n          return self.request.send(endpoint, 'POST', null, data, requestOpts)\n            .then(\n              function(accountData) {\n                if (options && options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method signIn\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   *   @param {String} [options.service]\n   *   Service being signed into\n   *   @param {String} [options.reason]\n   *   Reason for sign in. Can be one of: `signin`, `password_check`,\n   *   `password_change`, `password_reset`\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   *   @param {String} [options.unblockCode]\n   *   Login unblock code.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.signIn = function (email, password, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          var endpoint = '/account/login';\n\n          if (options.keys) {\n            endpoint += '?keys=true';\n          }\n\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n\n          if (options.reason) {\n            data.reason = options.reason;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.unblockCode) {\n            data.unblockCode = options.unblockCode;\n          }\n\n          if (options.originalLoginEmail) {\n            data.originalLoginEmail = options.originalLoginEmail;\n          }\n\n          return self.request.send(endpoint, 'POST', null, data)\n            .then(\n              function(accountData) {\n                if (options.keys) {\n                  accountData.unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n                }\n                return accountData;\n              },\n              function(error) {\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n                  options.originalLoginEmail = email;\n\n                  return self.signIn(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * @method verifyCode\n   * @param {String} uid Account ID\n   * @param {String} code Verification code\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Service being signed into\n   *   @param {String} [options.reminder]\n   *   Reminder that was used to verify the account\n   *   @param {String} [options.type]\n   *   Type of code being verified, only supports `secondary` otherwise will verify account/sign-in\n   *   @param {Boolean} [options.marketingOptIn]\n   *   If `true`, notifies marketing of opt-in intent.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.verifyCode = function(uid, code, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(uid, 'uid');\n        required(code, 'verify code');\n\n        var data = {\n          uid: uid,\n          code: code\n        };\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.reminder) {\n            data.reminder = options.reminder;\n          }\n\n          if (options.type) {\n            data.type = options.type;\n          }\n\n          if (options.marketingOptIn) {\n            data.marketingOptIn = true;\n          }\n        }\n\n        return self.request.send('/recovery_email/verify_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * @method recoveryEmailStatus\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailStatus = function(sessionToken) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/recovery_email/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   *\n   * @method recoveryEmailResendCode\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.email]\n   *   Code will be resent to this email, only used for secondary email codes\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.type]\n   *   Specifies the type of code to send, currently only supported type is\n   *   `upgradeSession`.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.recoveryEmailResendCode = function(sessionToken, options) {\n    var self = this;\n    var data = {};\n    var requestOpts = {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        if (options) {\n          if (options.email) {\n            data.email = options.email;\n          }\n\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.type) {\n            data.type = options.type;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n        }\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/recovery_email/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Used to ask the server to send a recovery code.\n   * The API returns passwordForgotToken to the client.\n   *\n   * @method passwordForgotSendCode\n   * @param {String} email\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotSendCode = function(email, options) {\n    var self = this;\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return self.request.send('/password/forgot/send_code', 'POST', null, data, requestOpts);\n      });\n  };\n\n  /**\n   * Re-sends a verification code to the account's recovery email address.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotResendCode\n   * @param {String} email\n   * @param {String} passwordForgotToken\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.service]\n   *   Opaque alphanumeric token to be included in verification links\n   *   @param {String} [options.redirectTo]\n   *   a URL that the client should be redirected to after handling the request\n   *   @param {String} [options.resume]\n   *   Opaque url-encoded string that will be included in the verification link\n   *   as a querystring parameter, useful for continuing an OAuth flow for\n   *   example.\n   *   @param {String} [options.lang]\n   *   set the language for the 'Accept-Language' header\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotResendCode = function(email, passwordForgotToken, options) {\n    var self = this;\n    var data = {\n      email: email\n    };\n    var requestOpts = {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        if (options) {\n          if (options.service) {\n            data.service = options.service;\n          }\n\n          if (options.redirectTo) {\n            data.redirectTo = options.redirectTo;\n          }\n\n          if (options.resume) {\n            data.resume = options.resume;\n          }\n\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/password/forgot/resend_code', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Submits the verification token to the server.\n   * The API returns accountResetToken to the client.\n   * HAWK-authenticated with the passwordForgotToken.\n   *\n   * @method passwordForgotVerifyCode\n   * @param {String} code\n   * @param {String} passwordForgotToken\n   * @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotVerifyCode = function(code, passwordForgotToken, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(code, 'reset code');\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          code: code\n        };\n\n        if (options && options.metricsContext) {\n          data.metricsContext = metricsContext.marshall(options.metricsContext);\n        }\n\n        return self.request.send('/password/forgot/verify_code', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Returns the status for the passwordForgotToken.\n   * If the request returns a success response, the token has not yet been consumed.\n\n   * @method passwordForgotStatus\n   * @param {String} passwordForgotToken\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordForgotStatus = function(passwordForgotToken) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(passwordForgotToken, 'passwordForgotToken');\n\n        return hawkCredentials(passwordForgotToken, 'passwordForgotToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/password/forgot/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * The API returns reset result to the client.\n   * HAWK-authenticated with accountResetToken\n   *\n   * @method accountReset\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {String} accountResetToken\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, a new `keyFetchToken` is provisioned. `options.sessionToken`\n   *   is required if `options.keys` is true.\n   *   @param {Boolean} [options.sessionToken]\n   *   If `true`, a new `sessionToken` is provisioned.\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountReset = function(email, newPassword, accountResetToken, options) {\n    var self = this;\n    var data = {};\n    var unwrapBKey;\n\n    options = options || {};\n\n    if (options.sessionToken) {\n      data.sessionToken = options.sessionToken;\n    }\n\n    if (options.metricsContext) {\n      data.metricsContext = metricsContext.marshall(options.metricsContext);\n    }\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(newPassword, 'new password');\n        required(accountResetToken, 'accountResetToken');\n\n        if (options.keys) {\n          required(options.sessionToken, 'sessionToken');\n        }\n\n        return credentials.setup(email, newPassword);\n      })\n      .then(\n        function (result) {\n          if (options.keys) {\n            unwrapBKey = sjcl.codec.hex.fromBits(result.unwrapBKey);\n          }\n\n          data.authPW = sjcl.codec.hex.fromBits(result.authPW);\n\n          return hawkCredentials(accountResetToken, 'accountResetToken',  HKDF_SIZE);\n        }\n      ).then(\n        function (creds) {\n          var queryParams = '';\n          if (options.keys) {\n            queryParams = '?keys=true';\n          }\n\n          var endpoint = '/account/reset' + queryParams;\n          return self.request.send(endpoint, 'POST', creds, data)\n            .then(\n              function(accountData) {\n                if (options.keys && accountData.keyFetchToken) {\n                  accountData.unwrapBKey = unwrapBKey;\n                }\n\n                return accountData;\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Get the base16 bundle of encrypted kA|wrapKb.\n   *\n   * @method accountKeys\n   * @param {String} keyFetchToken\n   * @param {String} oldUnwrapBKey\n   * @return {Promise} A promise that will be fulfilled with JSON of {kA, kB}  of the key bundle\n   */\n  FxAccountClient.prototype.accountKeys = function(keyFetchToken, oldUnwrapBKey) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(keyFetchToken, 'keyFetchToken');\n        required(oldUnwrapBKey, 'oldUnwrapBKey');\n\n        return hawkCredentials(keyFetchToken, 'keyFetchToken',  3 * 32);\n      })\n      .then(function(creds) {\n        var bundleKey = sjcl.codec.hex.fromBits(creds.bundleKey);\n\n        return self.request.send('/account/keys', 'GET', creds)\n          .then(\n            function(payload) {\n\n              return credentials.unbundleKeyFetchResponse(bundleKey, payload.bundle);\n            });\n      })\n      .then(function(keys) {\n        return {\n          kB: sjcl.codec.hex.fromBits(\n            credentials.xor(\n              sjcl.codec.hex.toBits(keys.wrapKB),\n              sjcl.codec.hex.toBits(oldUnwrapBKey)\n            )\n          ),\n          kA: keys.kA\n        };\n      });\n  };\n\n  /**\n   * This deletes the account completely. All stored data is erased.\n   *\n   * @method accountDestroy\n   * @param {String} email Email input\n   * @param {String} password Password input\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountDestroy = function(email, password, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(password, 'password');\n\n        return credentials.setup(email, password);\n      })\n      .then(\n        function (result) {\n          var data = {\n            email: result.emailUTF8,\n            authPW: sjcl.codec.hex.fromBits(result.authPW)\n          };\n\n          return self.request.send('/account/destroy', 'POST', null, data)\n            .then(\n              function(response) {\n                return response;\n              },\n              function(error) {\n                // if incorrect email case error\n                if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                  options.skipCaseError = true;\n\n                  return self.accountDestroy(error.email, password, options);\n                } else {\n                  throw error;\n                }\n              }\n            );\n        }\n      );\n  };\n\n  /**\n   * Gets the status of an account by uid.\n   *\n   * @method accountStatus\n   * @param {String} uid User account id\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatus = function(uid) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(uid, 'uid');\n\n        return self.request.send('/account/status?uid=' + uid, 'GET');\n      });\n  };\n\n  /**\n   * Gets the status of an account by email.\n   *\n   * @method accountStatusByEmail\n   * @param {String} email User account email\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.accountStatusByEmail = function(email) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n\n        return self.request.send('/account/status', 'POST', null, {email: email});\n      });\n  };\n\n  /**\n   * Destroys this session, by invalidating the sessionToken.\n   *\n   * @method sessionDestroy\n   * @param {String} sessionToken User session token\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.customSessionToken] Override which session token to destroy for this same user\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionDestroy = function(sessionToken, options) {\n    var self = this;\n    var data = {};\n    options = options || {};\n\n    if (options.customSessionToken) {\n      data.customSessionToken = options.customSessionToken;\n    }\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/session/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Responds successfully if the session status is valid, requires the sessionToken.\n   *\n   * @method sessionStatus\n   * @param {String} sessionToken User session token\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessionStatus = function(sessionToken) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return self.request.send('/session/status', 'GET', creds);\n      });\n  };\n\n  /**\n   * Sign a BrowserID public key\n   *\n   * @method certificateSign\n   * @param {String} sessionToken User session token\n   * @param {Object} publicKey The key to sign\n   * @param {int} duration Time interval from now when the certificate will expire in milliseconds\n   * @param {Object} [options={}] Options\n   *   @param {String} [service=''] The requesting service, sent via the query string\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.certificateSign = function(sessionToken, publicKey, duration, options) {\n    var self = this;\n    var data = {\n      publicKey: publicKey,\n      duration: duration\n    };\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(publicKey, 'publicKey');\n        required(duration, 'duration');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        options = options || {};\n\n        var queryString = '';\n        if (options.service) {\n          queryString = '?service=' + encodeURIComponent(options.service);\n        }\n\n        return self.request.send('/certificate/sign' + queryString, 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Change the password from one known value to another.\n   *\n   * @method passwordChange\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {String} newPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get a new keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.passwordChange = function(email, oldPassword, newPassword, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(oldPassword, 'old password');\n        required(newPassword, 'new password');\n\n        return self._passwordChangeStart(email, oldPassword);\n      })\n      .then(function (credentials) {\n\n        var oldCreds = credentials;\n        var emailToHashWith = credentials.emailToHashWith || email;\n\n        return self._passwordChangeKeys(oldCreds)\n          .then(function (keys) {\n\n            return self._passwordChangeFinish(emailToHashWith, newPassword, oldCreds, keys, options);\n          });\n      });\n\n  };\n\n  /**\n   * First step to change the password.\n   *\n   * @method passwordChangeStart\n   * @private\n   * @param {String} email\n   * @param {String} oldPassword\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.skipCaseError]\n   *   If `true`, the request will skip the incorrect case error\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText` and `oldUnwrapBKey`\n   */\n  FxAccountClient.prototype._passwordChangeStart = function(email, oldPassword, options) {\n    var self = this;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(oldPassword, 'old password');\n\n        return credentials.setup(email, oldPassword);\n      })\n      .then(function (oldCreds) {\n        var data = {\n          email: oldCreds.emailUTF8,\n          oldAuthPW: sjcl.codec.hex.fromBits(oldCreds.authPW)\n        };\n\n        return self.request.send('/password/change/start', 'POST', null, data)\n          .then(\n            function(passwordData) {\n              passwordData.oldUnwrapBKey = sjcl.codec.hex.fromBits(oldCreds.unwrapBKey);\n\n              // Similar to password reset, this keeps the contract that we always\n              // hash passwords with the original account email.\n              passwordData.emailToHashWith = email;\n              return passwordData;\n            },\n            function(error) {\n              // if incorrect email case error\n              if (error && error.email && error.errno === ERRORS.INCORRECT_EMAIL_CASE && !options.skipCaseError) {\n                options.skipCaseError = true;\n\n                return self._passwordChangeStart(error.email, oldPassword, options);\n              } else {\n                throw error;\n              }\n            }\n          );\n      });\n  };\n\n  function checkCreds(creds) {\n    required(creds, 'credentials');\n    required(creds.oldUnwrapBKey, 'credentials.oldUnwrapBKey');\n    required(creds.keyFetchToken, 'credentials.keyFetchToken');\n    required(creds.passwordChangeToken, 'credentials.passwordChangeToken');\n  }\n\n  /**\n   * Second step to change the password.\n   *\n   * @method _passwordChangeKeys\n   * @private\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeKeys = function(oldCreds) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        checkCreds(oldCreds);\n      })\n      .then(function () {\n        return self.accountKeys(oldCreds.keyFetchToken, oldCreds.oldUnwrapBKey);\n      });\n  };\n\n  /**\n   * Third step to change the password.\n   *\n   * @method _passwordChangeFinish\n   * @private\n   * @param {String} email\n   * @param {String} newPassword\n   * @param {Object} oldCreds This object should consists of `oldUnwrapBKey`, `keyFetchToken` and `passwordChangeToken`.\n   * @param {Object} keys This object should contain the unbundled keys\n   * @param {Object} [options={}] Options\n   *   @param {Boolean} [options.keys]\n   *   If `true`, calls the API with `?keys=true` to get the keyFetchToken\n   *   @param {String} [options.sessionToken]\n   *   If a `sessionToken` is passed, a new sessionToken will be returned\n   *   with the same `verified` status as the existing sessionToken.\n   * @return {Promise} A promise that will be fulfilled with JSON of `xhr.responseText`\n   */\n  FxAccountClient.prototype._passwordChangeFinish = function(email, newPassword, oldCreds, keys, options) {\n    options = options || {};\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n        required(newPassword, 'new password');\n        checkCreds(oldCreds);\n        required(keys, 'keys');\n        required(keys.kB, 'keys.kB');\n\n        var defers = [];\n        defers.push(credentials.setup(email, newPassword));\n        defers.push(hawkCredentials(oldCreds.passwordChangeToken, 'passwordChangeToken',  HKDF_SIZE));\n\n        if (options.sessionToken) {\n          // Unbundle session data to get session id\n          defers.push(hawkCredentials(options.sessionToken, 'sessionToken',  HKDF_SIZE));\n        }\n\n        return P.all(defers);\n      })\n      .spread(function (newCreds, hawkCreds, sessionData) {\n        var newWrapKb = sjcl.codec.hex.fromBits(\n          credentials.xor(\n            sjcl.codec.hex.toBits(keys.kB),\n            newCreds.unwrapBKey\n          )\n        );\n\n        var queryParams = '';\n        if (options.keys) {\n          queryParams = '?keys=true';\n        }\n\n        var sessionTokenId;\n        if (sessionData && sessionData.id) {\n          sessionTokenId = sessionData.id;\n        }\n\n        return self.request.send('/password/change/finish' + queryParams, 'POST', hawkCreds, {\n          wrapKb: newWrapKb,\n          authPW: sjcl.codec.hex.fromBits(newCreds.authPW),\n          sessionToken: sessionTokenId\n        })\n        .then(function (accountData) {\n          if (options.keys && accountData.keyFetchToken) {\n            accountData.unwrapBKey = sjcl.codec.hex.fromBits(newCreds.unwrapBKey);\n          }\n          return accountData;\n        });\n      });\n  };\n\n  /**\n   * Get 32 bytes of random data. This should be combined with locally-sourced entropy when creating salts, etc.\n   *\n   * @method getRandomBytes\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.getRandomBytes = function() {\n\n    return this.request.send('/get_random_bytes', 'POST');\n  };\n\n  /**\n   * Add a new device\n   *\n   * @method deviceRegister\n   * @param {String} sessionToken User session token\n   * @param {String} deviceName Name of device\n   * @param {String} deviceType Type of device (mobile|desktop)\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceRegister = function (sessionToken, deviceName, deviceType, options) {\n    var request = this.request;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceName, 'deviceName');\n        required(deviceType, 'deviceType');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          name: deviceName,\n          type: deviceType\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Update the name of an existing device\n   *\n   * @method deviceUpdate\n   * @param {String} sessionToken User session token\n   * @param {String} deviceId User-unique identifier of device\n   * @param {String} deviceName Name of device\n   * @param {Object} [options={}] Options\n   *   @param {string} [options.deviceCallback] Device's push endpoint.\n   *   @param {string} [options.devicePublicKey] Public key used to encrypt push messages.\n   *   @param {string} [options.deviceAuthKey] Authentication secret used to encrypt push messages.\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceUpdate = function (sessionToken, deviceId, deviceName, options) {\n    var request = this.request;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceId, 'deviceId');\n        required(deviceName, 'deviceName');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          id: deviceId,\n          name: deviceName\n        };\n\n        if (options.deviceCallback) {\n          data.pushCallback = options.deviceCallback;\n        }\n\n        if (options.devicePublicKey && options.deviceAuthKey) {\n          data.pushPublicKey = options.devicePublicKey;\n          data.pushAuthKey = options.deviceAuthKey;\n        }\n\n        return request.send('/account/device', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Unregister an existing device\n   *\n   * @method deviceDestroy\n   * @param {String} sessionToken Session token obtained from signIn\n   * @param {String} deviceId User-unique identifier of device\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceDestroy = function (sessionToken, deviceId) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(deviceId, 'deviceId');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          id: deviceId\n        };\n\n        return request.send('/account/device/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Get a list of all devices for a user\n   *\n   * @method deviceList\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.deviceList = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/account/devices', 'GET', creds);\n      });\n  };\n\n  /**\n   * Get a list of user's sessions\n   *\n   * @method sessions\n   * @param {String} sessionToken sessionToken obtained from signIn\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sessions = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/account/sessions', 'GET', creds);\n      });\n  };\n\n  /**\n   * Send an unblock code\n   *\n   * @method sendUnblockCode\n   * @param {String} email email where to send the login authorization code\n   * @param {Object} [options={}] Options\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.sendUnblockCode = function (email, options) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(email, 'email');\n\n        var data = {\n          email: email\n        };\n\n        if (options && options.metricsContext) {\n          data.metricsContext = metricsContext.marshall(options.metricsContext);\n        }\n\n        return self.request.send('/account/login/send_unblock_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * Reject a login unblock code. Code will be deleted from the server\n   * and will not be able to be used again.\n   *\n   * @method rejectLoginAuthorizationCode\n   * @param {String} uid Account ID\n   * @param {String} unblockCode unblock code\n   * @return {Promise} A promise that will be fulfilled with JSON `xhr.responseText` of the request\n   */\n  FxAccountClient.prototype.rejectUnblockCode = function (uid, unblockCode) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(uid, 'uid');\n        required(unblockCode, 'unblockCode');\n\n        var data = {\n          uid: uid,\n          unblockCode: unblockCode\n        };\n\n        return self.request.send('/account/login/reject_unblock_code', 'POST', null, data);\n      });\n  };\n\n  /**\n   * Send an sms.\n   *\n   * @method sendSms\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} phoneNumber Phone number sms will be sent to\n   * @param {String} messageId Corresponding message id that will be sent\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.lang] Language that sms will be sent in\n   *   @param {Array} [options.features] Array of features to be enabled for the request\n   *   @param {Object} [options.metricsContext={}] Metrics context metadata\n   *     @param {String} options.metricsContext.deviceId identifier for the current device\n   *     @param {String} options.metricsContext.flowId identifier for the current event flow\n   *     @param {Number} options.metricsContext.flowBeginTime flow.begin event time\n   *     @param {Number} options.metricsContext.utmCampaign marketing campaign identifier\n   *     @param {Number} options.metricsContext.utmContent content identifier\n   *     @param {Number} options.metricsContext.utmMedium acquisition medium\n   *     @param {Number} options.metricsContext.utmSource traffic source\n   *     @param {Number} options.metricsContext.utmTerm search terms\n   */\n  FxAccountClient.prototype.sendSms = function (sessionToken, phoneNumber, messageId, options) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(phoneNumber, 'phoneNumber');\n        required(messageId, 'messageId');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          phoneNumber: phoneNumber,\n          messageId: messageId\n        };\n        var requestOpts = {};\n\n        if (options) {\n          if (options.lang) {\n            requestOpts.headers = {\n              'Accept-Language': options.lang\n            };\n          }\n\n          if (options.features) {\n            data.features = options.features;\n          }\n\n          if (options.metricsContext) {\n            data.metricsContext = metricsContext.marshall(options.metricsContext);\n          }\n        }\n\n        return request.send('/sms', 'POST', creds, data, requestOpts);\n      });\n  };\n\n  /**\n   * Get SMS status for the current user.\n   *\n   * @method smsStatus\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {Object} [options={}] Options\n   *   @param {String} [options.country] country Country to force for testing.\n   */\n  FxAccountClient.prototype.smsStatus = function (sessionToken, options) {\n    var request = this.request;\n    options = options || {};\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function (creds) {\n        var url = '/sms/status';\n        if (options.country) {\n          url += '?country=' + encodeURIComponent(options.country);\n        }\n        return request.send(url, 'GET', creds);\n      });\n  };\n\n  /**\n   * Consume a signinCode.\n   *\n   * @method consumeSigninCode\n   * @param {String} code The signinCode entered by the user\n   * @param {String} flowId Identifier for the current event flow\n   * @param {Number} flowBeginTime Timestamp for the flow.begin event\n   * @param {String} [deviceId] Identifier for the current device\n   */\n  FxAccountClient.prototype.consumeSigninCode = function (code, flowId, flowBeginTime, deviceId) {\n    var self = this;\n\n    return P()\n      .then(function () {\n        required(code, 'code');\n        required(flowId, 'flowId');\n        required(flowBeginTime, 'flowBeginTime');\n\n        return self.request.send('/signinCodes/consume', 'POST', null, {\n          code: code,\n          metricsContext: {\n            deviceId: deviceId,\n            flowId: flowId,\n            flowBeginTime: flowBeginTime\n          }\n        });\n      });\n  };\n\n  /**\n   * Get the recovery emails associated with the signed in account.\n   *\n   * @method recoveryEmails\n   * @param {String} sessionToken SessionToken obtained from signIn\n   */\n  FxAccountClient.prototype.recoveryEmails = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/recovery_emails', 'GET', creds);\n      });\n  };\n\n  /**\n   * Create a new recovery email for the signed in account.\n   *\n   * @method recoveryEmailCreate\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email new email to be added\n   */\n  FxAccountClient.prototype.recoveryEmailCreate = function (sessionToken, email) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(sessionToken, 'email');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n\n        return request.send('/recovery_email', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Remove the recovery email for the signed in account.\n   *\n   * @method recoveryEmailDestroy\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email email to be removed\n   */\n  FxAccountClient.prototype.recoveryEmailDestroy = function (sessionToken, email) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n        required(sessionToken, 'email');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n\n        return request.send('/recovery_email/destroy', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Check to see if the secondary email feature is enabled for this user.\n   *\n   * @method recoveryEmailSecondaryEmailEnabled\n   * @param {String} sessionToken SessionToken obtained from signIn\n   */\n  FxAccountClient.prototype.recoveryEmailSecondaryEmailEnabled = function (sessionToken) {\n    var request = this.request;\n\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        return request.send('/recovery_email/check_can_add_secondary_address', 'GET', creds);\n      });\n  };\n\n  /**\n   * Changes user's primary email address.\n   *\n   * @method recoveryEmailSetPrimaryEmail\n   * @param {String} sessionToken SessionToken obtained from signIn\n   * @param {String} email Email that will be the new primary email for user\n   */\n  FxAccountClient.prototype.recoveryEmailSetPrimaryEmail = function (sessionToken, email) {\n    var request = this.request;\n    return P()\n      .then(function () {\n        required(sessionToken, 'sessionToken');\n\n        return hawkCredentials(sessionToken, 'sessionToken',  HKDF_SIZE);\n      })\n      .then(function(creds) {\n        var data = {\n          email: email\n        };\n        return request.send('/recovery_email/set_primary', 'POST', creds, data);\n      });\n  };\n\n  /**\n   * Check for a required argument. Exposed for unit testing.\n   *\n   * @param {Value} val - value to check\n   * @param {String} name - name of value\n   * @throws {Error} if argument is falsey, or an empty object\n   */\n  FxAccountClient.prototype._required = required;\n\n  return FxAccountClient;\n});\n\n"]}